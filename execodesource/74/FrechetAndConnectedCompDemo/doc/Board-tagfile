<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>Board.cpp</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Board_8cpp</filename>
    <includes id="Board_8h" name="Board.h" local="yes" imported="no">Board.h</includes>
    <includes id="Point_8h" name="Point.h" local="yes" imported="no">Board/Point.h</includes>
    <includes id="Rect_8h" name="Rect.h" local="yes" imported="no">Board/Rect.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Board/Shapes.h</includes>
    <includes id="Tools_8h" name="Tools.h" local="yes" imported="no">Board/Tools.h</includes>
    <includes id="PSFonts_8h" name="PSFonts.h" local="yes" imported="no">Board/PSFonts.h</includes>
    <namespace>LibBoard</namespace>
  </compound>
  <compound kind="file">
    <name>Board.h</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Board_8h</filename>
    <includes id="Point_8h" name="Point.h" local="yes" imported="no">Board/Point.h</includes>
    <includes id="Path_8h" name="Path.h" local="yes" imported="no">Board/Path.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Board/Shapes.h</includes>
    <includes id="ShapeList_8h" name="ShapeList.h" local="yes" imported="no">Board/ShapeList.h</includes>
    <class kind="class">LibBoard::Board</class>
    <class kind="struct">LibBoard::Board::State</class>
    <namespace>LibBoard</namespace>
  </compound>
  <compound kind="file">
    <name>Path.cpp</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Path_8cpp</filename>
    <includes id="Path_8h" name="Path.h" local="yes" imported="no">Board/Path.h</includes>
    <includes id="Transforms_8h" name="Transforms.h" local="yes" imported="no">Board/Transforms.h</includes>
    <namespace>LibBoard</namespace>
  </compound>
  <compound kind="file">
    <name>Path.h</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Path_8h</filename>
    <includes id="Point_8h" name="Point.h" local="yes" imported="no">Board/Point.h</includes>
    <includes id="Rect_8h" name="Rect.h" local="yes" imported="no">Board/Rect.h</includes>
    <includes id="Transforms_8h" name="Transforms.h" local="yes" imported="no">Board/Transforms.h</includes>
    <class kind="struct">LibBoard::Path</class>
    <namespace>LibBoard</namespace>
  </compound>
  <compound kind="file">
    <name>Point.h</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Point_8h</filename>
    <class kind="struct">LibBoard::Point</class>
    <namespace>LibBoard</namespace>
    <member kind="function">
      <type>Point</type>
      <name>operator+</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a52f64a3103c5f069fc872e44a748b071</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator-</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a539611e1fc0ee741fb894d17e00f8bdf</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator*</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>aed4a3f230db70277f9381c88f2e65b1f</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator*</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>af24ad61eb695963ae09d242c12906d79</anchor>
      <arglist>(const Point &amp;p, double s)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator*</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a50522b6045f6f04769190c90b645f0dd</anchor>
      <arglist>(double s, const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator/</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a5857c3c2977e54abdad05d2a64a713f0</anchor>
      <arglist>(const Point &amp;p, double s)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>ae493f4c9fd7b8059d9f9d48227b52fe1</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>aa15ec0fa9afd69f6dd288ab71d30af88</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PSFonts.cpp</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>PSFonts_8cpp</filename>
    <namespace>LibBoard</namespace>
    <member kind="variable">
      <type>const char *</type>
      <name>PSFontNames</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>ab97d61a823aad2081d872f20d9df1ae8</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PSFonts.h</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>PSFonts_8h</filename>
    <namespace>LibBoard</namespace>
    <namespace>LibBoard::Fonts</namespace>
    <member kind="enumeration">
      <name>Font</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimesRoman</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a7227b7b4fa78b16fb731db54846e1b26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimesItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a76b5f1151fceef8c7b8e4a5555ec94fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimesBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a5bdb16044950413eba1f7f71b778b291</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimesBoldItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a38df5016e4c601f879c0c01118e146b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AvantGardeBook</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3aa911b772f521481da7aa40cc1efa2076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AvantGardeBookOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3ae2a5eb3e995ad5926dc2a20a5f26113e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AvantGardeDemi</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3af029c17d1f6ec2445791ff30fcc24b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AvantGardeDemiOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a3ed537b29c4b710ec6939bb034e2f99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BookmanLight</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a6ff73a054a11fce1040b2253fa562f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BookmanLightItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3aea2627abf0106d73acf25e5570ffb2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BookmanDemi</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3ab1a79492e1901fb5314f426a9fe6b8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BookmanDemiItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3aa4c4efbcf79d03f94772f876fb595392</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Courier</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a6f143a3bfd5710c1953ca8fd6aff99dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CourierOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a29cb6ff6038d784ae8798084a30bfb9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CourierBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3afc5836f6edcb2052b30fa9aee43ff418</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CourierBoldOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a6deccba7755293bac2aa7cd78fb74bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Helvetica</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a297d33f587c8b5b5e7f326f9675592bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a6976891d33424baf62d364ba3c36394f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a97741f6bbc7406a16a2f451b775a90c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaBoldOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3ac73a7b700497f588eba0b2832962367d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaNarrow</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a4424f60f58811b1a02a6defddaf0108f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaNarrowOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3aed33367c067d894b80df17cf77c8f31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaNarrowBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3ae6910a04fecf7eb2acacd67f5cdca831</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaNarrowBoldOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a928b45abd6c58949e109c4e4aebfb4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NewCenturySchoolbookRoman</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3ab8b927d406ca078899edcb469df9508c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NewCenturySchoolbookItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3af613f77894402c9904459a6e4216ea6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NewCenturySchoolbookBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a15a4ac0bcf525a8267badafabcdddbd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NewCenturySchoolbookBoldItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a4ec0fd60b55d9fed3e06ed475bc05bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PalatinoRoman</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a4721d8c6bbb43c0846946400600c7eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PalatinoItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a14533f71758a695062ddcb9f0e1f2ca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PalatinoBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a353169cffd1a6e5c5a02a04f3743d5e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PalatinoBoldItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3aef3cf05c45b7063931faeb001ba0d50a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Symbol</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a149a422620be1214441e8dd87298280f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZapfChanceryMediumItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a7f58ed6b377ae7f535f2830b1eb1c325</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZapfDingbats</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a9ae3ec0178abb9c0b4c6fe51876af210</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Rect.cpp</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Rect_8cpp</filename>
    <includes id="Rect_8h" name="Rect.h" local="yes" imported="no">Board/Rect.h</includes>
    <namespace>LibBoard</namespace>
    <member kind="function">
      <type>Rect</type>
      <name>operator||</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>acd3088fa98d8c98011ce3468eef1d20f</anchor>
      <arglist>(const Rect &amp;rectA, const Rect &amp;rectB)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>operator&amp;&amp;</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a8c41490c43ff6f76fac71da15fe651ed</anchor>
      <arglist>(const Rect &amp;rectA, const Rect &amp;rectB)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>Rect_8cpp.html</anchorfile>
      <anchor>ab9427540a84ee996d30977736d495385</anchor>
      <arglist>(std::ostream &amp;out, const LibBoard::Rect &amp;rect)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Rect.h</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Rect_8h</filename>
    <includes id="Point_8h" name="Point.h" local="yes" imported="no">Board/Point.h</includes>
    <class kind="struct">LibBoard::Rect</class>
    <namespace>LibBoard</namespace>
    <member kind="function">
      <type>Rect</type>
      <name>operator||</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>acd3088fa98d8c98011ce3468eef1d20f</anchor>
      <arglist>(const Rect &amp;rectA, const Rect &amp;rectB)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>operator&amp;&amp;</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a8c41490c43ff6f76fac71da15fe651ed</anchor>
      <arglist>(const Rect &amp;rectA, const Rect &amp;rectB)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>Rect_8h.html</anchorfile>
      <anchor>ab9427540a84ee996d30977736d495385</anchor>
      <arglist>(std::ostream &amp;out, const LibBoard::Rect &amp;rect)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ShapeList.cpp</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>ShapeList_8cpp</filename>
    <includes id="ShapeList_8h" name="ShapeList.h" local="yes" imported="no">Board/ShapeList.h</includes>
    <includes id="Tools_8h" name="Tools.h" local="yes" imported="no">Board/Tools.h</includes>
    <namespace>LibBoard</namespace>
  </compound>
  <compound kind="file">
    <name>ShapeList.h</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>ShapeList_8h</filename>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Board/Shapes.h</includes>
    <includes id="Tools_8h" name="Tools.h" local="yes" imported="no">Board/Tools.h</includes>
    <class kind="struct">LibBoard::ShapeList</class>
    <class kind="struct">LibBoard::Group</class>
    <namespace>LibBoard</namespace>
  </compound>
  <compound kind="file">
    <name>Shapes.cpp</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Shapes_8cpp</filename>
    <includes id="Rect_8h" name="Rect.h" local="yes" imported="no">Board/Rect.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Board/Shapes.h</includes>
    <includes id="Tools_8h" name="Tools.h" local="yes" imported="no">Board/Tools.h</includes>
    <includes id="PSFonts_8h" name="PSFonts.h" local="yes" imported="no">Board/PSFonts.h</includes>
    <namespace>LibBoard</namespace>
    <member kind="define">
      <type>#define</type>
      <name>M_PI</name>
      <anchorfile>Shapes_8cpp.html</anchorfile>
      <anchor>ae71449b1cc6e6250b91f539153a7a0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOLD_FONT</name>
      <anchorfile>Shapes_8cpp.html</anchorfile>
      <anchor>a0660daea0ae71fb68b610c18e2def4ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ITALIC_FONT</name>
      <anchorfile>Shapes_8cpp.html</anchorfile>
      <anchor>a26d0e495b5eb99406884cca7234c7d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MONOSPACE_FONT</name>
      <anchorfile>Shapes_8cpp.html</anchorfile>
      <anchor>a303f695893b975567e2eace3eecd4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SANSSERIF_FONT</name>
      <anchorfile>Shapes_8cpp.html</anchorfile>
      <anchor>a6f9603a8e89408e469d70db8f646a495</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shapeGreaterDepth</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a1afd34c088bbc95d43a0fd4b74a5bdc3</anchor>
      <arglist>(const Shape *s1, const Shape *s2)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>XFigPostscriptFontnames</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a3663d2eeff4cdea60f532e507147a449</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Shapes.h</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Shapes_8h</filename>
    <includes id="Point_8h" name="Point.h" local="yes" imported="no">Board/Point.h</includes>
    <includes id="Rect_8h" name="Rect.h" local="yes" imported="no">Board/Rect.h</includes>
    <includes id="Path_8h" name="Path.h" local="yes" imported="no">Board/Path.h</includes>
    <includes id="Transforms_8h" name="Transforms.h" local="yes" imported="no">Board/Transforms.h</includes>
    <includes id="PSFonts_8h" name="PSFonts.h" local="yes" imported="no">Board/PSFonts.h</includes>
    <includes id="Tools_8h" name="Tools.h" local="yes" imported="no">Board/Tools.h</includes>
    <class kind="struct">LibBoard::Shape</class>
    <class kind="struct">LibBoard::Dot</class>
    <class kind="struct">LibBoard::Line</class>
    <class kind="struct">LibBoard::Arrow</class>
    <class kind="struct">LibBoard::Polyline</class>
    <class kind="struct">LibBoard::Rectangle</class>
    <class kind="struct">LibBoard::Image</class>
    <class kind="struct">LibBoard::Triangle</class>
    <class kind="struct">LibBoard::GouraudTriangle</class>
    <class kind="struct">LibBoard::Ellipse</class>
    <class kind="struct">LibBoard::Circle</class>
    <class kind="struct">LibBoard::Arc</class>
    <class kind="struct">LibBoard::Text</class>
    <namespace>LibBoard</namespace>
    <member kind="define">
      <type>#define</type>
      <name>M_PI</name>
      <anchorfile>Shapes_8h.html</anchorfile>
      <anchor>ae71449b1cc6e6250b91f539153a7a0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M_PI_2</name>
      <anchorfile>Shapes_8h.html</anchorfile>
      <anchor>a958e4508ed28ee5cc04249144312c15f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shapeGreaterDepth</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a1afd34c088bbc95d43a0fd4b74a5bdc3</anchor>
      <arglist>(const Shape *s1, const Shape *s2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tools.cpp</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Tools_8cpp</filename>
    <includes id="Tools_8h" name="Tools.h" local="yes" imported="no">Board/Tools.h</includes>
  </compound>
  <compound kind="file">
    <name>Tools.h</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Tools_8h</filename>
    <class kind="class">LibBoard::MessageStream</class>
    <namespace>LibBoard</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SHOW</name>
      <anchorfile>Tools_8h.html</anchorfile>
      <anchor>aec835d8e045e566daf01133b8b1d8046</anchor>
      <arglist>(V)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>secured_sprintf</name>
      <anchorfile>Tools_8h.html</anchorfile>
      <anchor>ac2bf4a4ca318ce464234d531c13c59d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>secured_strncpy</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a8dbd39e241e7dca837a19e6b7705582c</anchor>
      <arglist>(char *dst, const char *src, size_t count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>secured_ctime</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a3d7f8b88ff3e1aa5f51336b3099c7192</anchor>
      <arglist>(char *str, const time_t *t, size_t count)</arglist>
    </member>
    <member kind="variable">
      <type>MessageStream</type>
      <name>error</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a7230298bf18922cfa1097dba489d87de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MessageStream</type>
      <name>warning</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a28135dc166153db2e0f3a5f8bcd5a60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MessageStream</type>
      <name>notice</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a8bf91fb021e5f66f6ac80ac87fb128ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Transforms.cpp</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Transforms_8cpp</filename>
    <includes id="Rect_8h" name="Rect.h" local="yes" imported="no">Board/Rect.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Board/Shapes.h</includes>
    <includes id="ShapeList_8h" name="ShapeList.h" local="yes" imported="no">Board/ShapeList.h</includes>
    <includes id="Transforms_8h" name="Transforms.h" local="yes" imported="no">Board/Transforms.h</includes>
    <namespace>LibBoard</namespace>
  </compound>
  <compound kind="file">
    <name>Transforms.h</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>Transforms_8h</filename>
    <class kind="struct">LibBoard::Transform</class>
    <class kind="struct">LibBoard::TransformEPS</class>
    <class kind="struct">LibBoard::TransformFIG</class>
    <class kind="struct">LibBoard::TransformSVG</class>
    <class kind="struct">LibBoard::TransformTikZ</class>
    <namespace>LibBoard</namespace>
  </compound>
  <compound kind="namespace">
    <name>LibBoard</name>
    <filename>namespaceLibBoard.html</filename>
    <namespace>LibBoard::Fonts</namespace>
    <class kind="class">LibBoard::Board</class>
    <class kind="struct">LibBoard::Path</class>
    <class kind="struct">LibBoard::Point</class>
    <class kind="struct">LibBoard::Rect</class>
    <class kind="struct">LibBoard::ShapeList</class>
    <class kind="struct">LibBoard::Group</class>
    <class kind="struct">LibBoard::Shape</class>
    <class kind="struct">LibBoard::Dot</class>
    <class kind="struct">LibBoard::Line</class>
    <class kind="struct">LibBoard::Arrow</class>
    <class kind="struct">LibBoard::Polyline</class>
    <class kind="struct">LibBoard::Rectangle</class>
    <class kind="struct">LibBoard::Image</class>
    <class kind="struct">LibBoard::Triangle</class>
    <class kind="struct">LibBoard::GouraudTriangle</class>
    <class kind="struct">LibBoard::Ellipse</class>
    <class kind="struct">LibBoard::Circle</class>
    <class kind="struct">LibBoard::Arc</class>
    <class kind="struct">LibBoard::Text</class>
    <class kind="class">LibBoard::MessageStream</class>
    <class kind="struct">LibBoard::Transform</class>
    <class kind="struct">LibBoard::TransformEPS</class>
    <class kind="struct">LibBoard::TransformFIG</class>
    <class kind="struct">LibBoard::TransformSVG</class>
    <class kind="struct">LibBoard::TransformTikZ</class>
    <member kind="function">
      <type>Point</type>
      <name>operator+</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a52f64a3103c5f069fc872e44a748b071</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator-</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a539611e1fc0ee741fb894d17e00f8bdf</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator*</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>aed4a3f230db70277f9381c88f2e65b1f</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator*</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>af24ad61eb695963ae09d242c12906d79</anchor>
      <arglist>(const Point &amp;p, double s)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator*</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a50522b6045f6f04769190c90b645f0dd</anchor>
      <arglist>(double s, const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator/</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a5857c3c2977e54abdad05d2a64a713f0</anchor>
      <arglist>(const Point &amp;p, double s)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>ae493f4c9fd7b8059d9f9d48227b52fe1</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>aa15ec0fa9afd69f6dd288ab71d30af88</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>operator||</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>acd3088fa98d8c98011ce3468eef1d20f</anchor>
      <arglist>(const Rect &amp;rectA, const Rect &amp;rectB)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>operator&amp;&amp;</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a8c41490c43ff6f76fac71da15fe651ed</anchor>
      <arglist>(const Rect &amp;rectA, const Rect &amp;rectB)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shapeGreaterDepth</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a1afd34c088bbc95d43a0fd4b74a5bdc3</anchor>
      <arglist>(const Shape *s1, const Shape *s2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>secured_strncpy</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a8dbd39e241e7dca837a19e6b7705582c</anchor>
      <arglist>(char *dst, const char *src, size_t count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>secured_ctime</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a3d7f8b88ff3e1aa5f51336b3099c7192</anchor>
      <arglist>(char *str, const time_t *t, size_t count)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>PSFontNames</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>ab97d61a823aad2081d872f20d9df1ae8</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>XFigPostscriptFontnames</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a3663d2eeff4cdea60f532e507147a449</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>MessageStream</type>
      <name>error</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a7230298bf18922cfa1097dba489d87de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MessageStream</type>
      <name>warning</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a28135dc166153db2e0f3a5f8bcd5a60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MessageStream</type>
      <name>notice</name>
      <anchorfile>namespaceLibBoard.html</anchorfile>
      <anchor>a8bf91fb021e5f66f6ac80ac87fb128ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LibBoard::Board</name>
    <filename>classLibBoard_1_1Board.html</filename>
    <base>LibBoard::ShapeList</base>
    <class kind="struct">LibBoard::Board::State</class>
    <member kind="enumeration">
      <name>CairoType</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aced07ed24060f7a0e1262698af2b09a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CairoPDF</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aced07ed24060f7a0e1262698af2b09a9a373c0d03f710e13988d1dca82518724e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CairoPNG</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aced07ed24060f7a0e1262698af2b09a9a3ebc8147863b5159ebf9de32f96ee62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CairoPS</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aced07ed24060f7a0e1262698af2b09a9afd17a70ef2c695325f85c443d6300bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CairoEPS</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aced07ed24060f7a0e1262698af2b09a9a49eb3902a5701434909f2939d74c94d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CairoSVG</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aced07ed24060f7a0e1262698af2b09a9a171848d0fbc21c41e99f5e55ff2133cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PageSize</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a77cdb88a32ac2d3ad62baef58353bfc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoundingBox</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a77cdb88a32ac2d3ad62baef58353bfc2af144212fe6448c8c8a41644a48c6c8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A4</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a77cdb88a32ac2d3ad62baef58353bfc2a7aade0ac5953fc749c575bb98532c53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Letter</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a77cdb88a32ac2d3ad62baef58353bfc2a0ccb6a7fbd7a9116af7bd17595ef84dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Unit</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a3f79f876d837d6d427deb9e15e5589e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPoint</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a3f79f876d837d6d427deb9e15e5589e5aa79140a63ba47fd8c895315d71b8c578</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UInche</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a3f79f876d837d6d427deb9e15e5589e5a6c46540288fb3c55ab8373edc8d92fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UCentimeter</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a3f79f876d837d6d427deb9e15e5589e5a584cabe1c19d9b128244ef55e712273e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UMillimeter</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a3f79f876d837d6d427deb9e15e5589e5a179790e8669753f69f7427bc8d504af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Board</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ad2e893042bec61c3925d3b7cbffe546f</anchor>
      <arglist>(const DGtal::Color &amp;backgroundColor=DGtal::Color::None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Board</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a4c1dc41233d6866a560c9ac09ab606f6</anchor>
      <arglist>(const Board &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Board</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a75f0d71e18d24a832935de41c9ad8e93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>operator=</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a7194153f51575f623d2d5304d220b64b</anchor>
      <arglist>(const Board &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a46ed3958535daaf4ce4e1931a2c2dd05</anchor>
      <arglist>(const Shape &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a646018bcf194e61754e4e2143b605673</anchor>
      <arglist>(Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a8cdf5c9ba7420a26e25bf8382f367447</anchor>
      <arglist>(const DGtal::Color &amp;color=DGtal::Color::None)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a1e79b48398af7b435a5a40f028b332e7</anchor>
      <arglist>(unsigned char red, unsigned char green, unsigned char blue)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotate</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aa8f8dc7a4acd1e5b1d2f5b8ac600df29</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotate</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a334d1399623ca73ca9a8030f884dca74</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>translate</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a9a34d08fa381ed92c9547bf1cf980591</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aeac8d98bde76c92cae4a67f8ec801518</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a29dda2ae21df829e0b067845a520fce6</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Board</type>
      <name>rotated</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>af0603f0645e8616d2383979a67c80f5a</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Board</type>
      <name>rotated</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aa69e3c39c1164a8f2280f1d246c0c96d</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Board</type>
      <name>translated</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aa7df13091722117706c9869cdd04755d</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Board</type>
      <name>scaled</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ab3c2df5cfed6d5207c6ae49668935a1c</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Board</type>
      <name>scaled</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ae377fb7691b635787217521bb9f580e5</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUnit</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ad3f3f29633091b70b9e12452837f6c6c</anchor>
      <arglist>(Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUnit</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a1aff87c6bf6b011d0743831fc368387b</anchor>
      <arglist>(double factor, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawDot</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a7e4e62a0f349a1ec0ed89f09685c2f93</anchor>
      <arglist>(double x, double y, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLine</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a64cfaa0d8e99ffe65b99c7be040fbbc5</anchor>
      <arglist>(double x1, double y1, double x2, double y2, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrow</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a91f02bfc3d6ba41c0e19fea2aab80472</anchor>
      <arglist>(double x1, double y1, double x2, double y2, bool filled=true, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawTriangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a4c7005d95ef8d295b089ebfd1042992d</anchor>
      <arglist>(double x1, double y1, double x2, double y2, double x3, double y3, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawTriangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ac52332d8d522442501d9db133595b116</anchor>
      <arglist>(const Point &amp;p1, const Point &amp;p2, const Point &amp;p3, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArc</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a81af58e1bfa25797fd6f03930a8cdf1b</anchor>
      <arglist>(double x, double y, double radius, double angle1, double angle2, bool neg, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillTriangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a0c952f64633360db7aacb8476dd293a6</anchor>
      <arglist>(double x1, double y1, double x2, double y2, double x3, double y3, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillGouraudTriangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a8a6c8cf30f3327e38c10e5ab6b44a6c3</anchor>
      <arglist>(const Point &amp;p1, const DGtal::Color &amp;color1, const Point &amp;p2, const DGtal::Color &amp;color2, const Point &amp;p3, const DGtal::Color &amp;color3, unsigned char divisions=3, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillGouraudTriangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ac478388066aba52c26e14ef5d8d343bb</anchor>
      <arglist>(const double x1, const double y1, const DGtal::Color &amp;color1, const double x2, const double y2, const DGtal::Color &amp;color2, const double x3, const double y3, const DGtal::Color &amp;color3, unsigned char divisions=3, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillGouraudTriangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aac60263fffe52db59e0b8f77d68b6896</anchor>
      <arglist>(const Point &amp;p1, const float brightness1, const Point &amp;p2, const float brightness2, const Point &amp;p3, const float brightness3, unsigned char divisions=3, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillGouraudTriangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aa153d018af546add0dcc65fde2b4834d</anchor>
      <arglist>(const double x1, const double y1, const float brightness1, const double x2, const double y2, const float brightness2, const double x3, const double y3, const float brightness3, unsigned char divisions=3, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillTriangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a0024d8e472fa1eaa60a4ff38a276c7c0</anchor>
      <arglist>(const Point &amp;p1, const Point &amp;p2, const Point &amp;p3, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRectangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a02e945c6b75c2b3c43df97e1babc767f</anchor>
      <arglist>(double x, double y, double width, double height, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ac88fe51eb3bc23805300d237ea361486</anchor>
      <arglist>(std::string filename, double x, double y, double width, double height, int depthValue=-1, double alpha=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillRectangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aa3d2480c8528aa0ed00e215c71d53236</anchor>
      <arglist>(double x, double y, double width, double height, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawCircle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a970ab8dc215e1d4de695029bca56805b</anchor>
      <arglist>(double x, double y, double radius, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillCircle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a5b1a56ee2905ce8ba6fec0b0e459ee56</anchor>
      <arglist>(double x, double y, double radius, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawEllipse</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a235d598f09b12b81ded418d0bffc5b99</anchor>
      <arglist>(double x, double y, double xRadius, double yRadius, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillEllipse</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ac1e0f636e5080b1b605b3932bdbda222</anchor>
      <arglist>(double x, double y, double xRadius, double yRadius, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPolyline</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a3245e1702f8cbedf86802c01b0c02235</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawClosedPolyline</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a80da45abe8e9b12f24913a71b7056b5a</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillPolyline</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a6fc2ff5f86830de20d40364d13c83bcf</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ab40642b0fff9e5b8585793c8177d2901</anchor>
      <arglist>(double x, double y, const char *text, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a337f95036e1ac863d8be80f3cd2b011c</anchor>
      <arglist>(double x, double y, const std::string &amp;str, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setFont</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a0bdaff97ec6f4dc5afcd6c312096ef1d</anchor>
      <arglist>(const Fonts::Font font, double fontSize)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setFontSize</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a35ed8dcf7f5ccc73370ff30d9a2a5470</anchor>
      <arglist>(double fontSize)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setPenColorRGBi</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a7ded202bda8ef1b5769910b51b8d8e51</anchor>
      <arglist>(unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha=255)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setPenColorRGBf</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a94d59127158212b0c07b184a66b44346</anchor>
      <arglist>(float red, float green, float blue, float alpha=1.0f)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setPenColor</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a0c38953e04956d357afa05c9734178f2</anchor>
      <arglist>(const DGtal::Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setFillColorRGBi</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>abbc0d722f1c9bf49003743aa3d52a0ef</anchor>
      <arglist>(unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha=255)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setFillColorRGBf</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ad1d4740c5afc03e0e9c10460fd14b7e3</anchor>
      <arglist>(float red, float green, float blue, float alpha=1.0f)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setFillColor</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ac07facfac029771e811fc35c77645389</anchor>
      <arglist>(const DGtal::Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setLineWidth</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ac188d9b5f030366abc53d6fd46b14c3b</anchor>
      <arglist>(double width)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setLineStyle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a0294d06eb705554499da69d12233ee1a</anchor>
      <arglist>(Shape::LineStyle style)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setLineCap</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a4f3e9a0204475d2df842836ed0253ebc</anchor>
      <arglist>(Shape::LineCap cap)</arglist>
    </member>
    <member kind="function">
      <type>Board &amp;</type>
      <name>setLineJoin</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a551e5d05c625e284cc3494593575d0e6</anchor>
      <arglist>(Shape::LineJoin join)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>backgroundColor</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ac7f39d154d28be28d30327e5ae3ecc22</anchor>
      <arglist>(const DGtal::Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawBoundingBox</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>af3bceb96db4bbefab6ef5d648c07382e</anchor>
      <arglist>(int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClippingRectangle</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a0fce7f98f969fd25e663266ffdbff78b</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClippingPath</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a3df71108e3f3a7c739c69e2bd5e4d41a</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClippingPath</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ad3861e802093c7defecb48e014a05f65</anchor>
      <arglist>(const Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDuplicates</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>aacdd0bb95e17d41079ed9db0ce1f17df</anchor>
      <arglist>(const Shape &amp;shape, unsigned int times, double dx, double dy, double scale=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDuplicates</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ada3d83c100c46c90ddaa51f79d8e6413</anchor>
      <arglist>(const Shape &amp;shape, unsigned int times, double dx, double dy, double scaleX, double scaleY, double angle=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a5a4fd57becbd1447b23e252ad25da674</anchor>
      <arglist>(const char *filename, PageSize size=Board::BoundingBox, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a3db4e55badd8f074225af32d957d0703</anchor>
      <arglist>(const char *filename, double pageWidth, double pageHeight, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveEPS</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a0bb157ee0eb70eb9281634e9ed311818</anchor>
      <arglist>(const char *filename, PageSize size=Board::BoundingBox, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveEPS</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a91e1231fff597d9e56252c9e8b3a34dc</anchor>
      <arglist>(std::ostream &amp;out, PageSize size=Board::BoundingBox, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveEPS</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a5d2bd302a0febf34aadcfbb7a6f712e3</anchor>
      <arglist>(const char *filename, double pageWidth, double pageHeight, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveEPS</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ae34b7e5f8f438760fd662f229c05ee4e</anchor>
      <arglist>(std::ostream &amp;out, double pageWidth, double pageHeight, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveFIG</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a93feb7e2fdfea2dd8046cad77db385f4</anchor>
      <arglist>(const char *filename, PageSize size=Board::BoundingBox, double margin=10.0, bool includeFIGHeader=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveFIG</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a5b39cebaf2aca5d474716be4bb00fc92</anchor>
      <arglist>(std::ostream &amp;out, PageSize size=Board::BoundingBox, double margin=10.0, bool includeFIGHeader=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveFIG</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a9c52aa1be1385f1d25d15bb5e66e352c</anchor>
      <arglist>(const char *filename, double pageWidth, double pageHeight, double margin=10.0, bool includeFIGHeader=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveFIG</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a448d5c8ac8b25b539fbd4e5abdaf69b4</anchor>
      <arglist>(std::ostream &amp;out, double pageWidth, double pageHeight, double margin=10.0, bool includeFIGHeader=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveSVG</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>adab1403965fea54c0de9bfe38e1e6724</anchor>
      <arglist>(const char *filename, PageSize size=Board::BoundingBox, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveSVG</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a3d20445fdf89bea1acc5899e8f2c843f</anchor>
      <arglist>(std::ostream &amp;out, PageSize size=Board::BoundingBox, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveSVG</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a5a0bc22e1d16a51d3a4da91e83c64457</anchor>
      <arglist>(const char *filename, double pageWidth, double pageHeight, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveSVG</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a755013fff24b96cf8b774ba8d036dd02</anchor>
      <arglist>(std::ostream &amp;out, double pageWidth, double pageHeight, double margin=10.0, string filename=&quot;output.svg&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveTikZ</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a2c945a7ac2a744cf7b204db2fa06f906</anchor>
      <arglist>(const char *filename, PageSize size=Board::BoundingBox, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveTikZ</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a7df9a2da687dc1ecc464075bd0280c5c</anchor>
      <arglist>(std::ostream &amp;out, PageSize size=Board::BoundingBox, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveTikZ</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>adcc4ca8f2832da4def202a774a4eec33</anchor>
      <arglist>(const char *filename, double pageWidth, double pageHeight, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveTikZ</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a3439b939a9bbc2b30078e99e10ed31fb</anchor>
      <arglist>(std::ostream &amp;out, double pageWidth, double pageHeight, double margin=10.0) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShapeList</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a51555869437fc25ab717f4358b01111c</anchor>
      <arglist>(int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShapeList</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a1e58b8de6e59b1481cafc95c88ca5a46</anchor>
      <arglist>(const ShapeList &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShapeList</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a3c3180fbb8f7e1c3bd2647fc95afaa14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a56f6c0f05725c0a1dd59774a014c351b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>clear</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>af8042ae0a40b199b30a779b44806e8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a8abdb830e1ff746a1886d644394b392b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>adc1718c27806f84cf9125ab89ced45b8</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a86200816483f4f967c358387ac3a4f5d</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a81e7b3cf640caaed78d9457ae4fa6e8c</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>af44437cf9c85b571653842710d4684d4</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>ad97db08c773c919802c18bfee42d5ecd</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>ab3577e7304d242e94f4f666ae2f643cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>minDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a5780af572b0b816968b1bf11e651f63f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>maxDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a00f78867601114717f8063d2ba95cda4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a5c5f1c64c2d485200fab2a95c01103a5</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>Shape *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a10665ce1538d11baa2db41a695d313f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>operator=</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>ac4d88c28a228c80e76b8b95b4b9f0048</anchor>
      <arglist>(const ShapeList &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>operator+=</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>abee0adb9221254240697552bf1dfab56</anchor>
      <arglist>(const Shape &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>insert</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a6b0ce3a1cdbe3e9dc392d651680a8ed9</anchor>
      <arglist>(const Shape &amp;shape, int depth)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>dup</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a7934bacbd7748570e9d7ead96b01d0e6</anchor>
      <arglist>(unsigned int copies=1)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>last</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a88822818943730fee4bba48f25d57aa6</anchor>
      <arglist>(const unsigned int position=0)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>last</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>af2e0aff565ffca3e73ea99cde18c2aff</anchor>
      <arglist>(const unsigned int position=0)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>top</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a302f50681e15572df011ef97f66c1c07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>Degree</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a809c4701e9c467a747476ad3b27badd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>_state</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a24bd050f661b5c06f89125bbe20c5ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_backgroundColor</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>a1e7bd3bf4c652bd42e31a07ad419b960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>_clippingPath</name>
      <anchorfile>classLibBoard_1_1Board.html</anchorfile>
      <anchor>ada3971872a0d7cf5b3dc6a4e3cc2e7b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Shape * &gt;</type>
      <name>_shapes</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a4caa9fc2809888d0cb1a708ca9a1c238</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_nextDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a28ff4c73f30f245a2e779be447db3079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addShape</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a0e02eec9eb323bffea0ed336e76aee3f</anchor>
      <arglist>(const Shape &amp;shape, double scaleFactor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>free</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a1b03baf7babb01825e9a087fd5e2e06f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>svgProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a0e7e0cfca67d9953afbf534091c5ea40</anchor>
      <arglist>(const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>postscriptProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7544f9a093c60457a42268a39064543a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>tikzProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a47117ccbb8c57a4569fa6b0b0246cc46</anchor>
      <arglist>(const TransformTikZ &amp;transform) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Board::State</name>
    <filename>structLibBoard_1_1Board_1_1State.html</filename>
    <member kind="function">
      <type></type>
      <name>State</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a13f2eedaed855e25d46a134236d78b95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>unit</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a0183ca9cf7398248f96ce5160ac0bb2a</anchor>
      <arglist>(const double &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>unit</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>af9d113ecd3e315ccd2c99be5610daa9a</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unit</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a9b129987c5b5493511ef1540ba145302</anchor>
      <arglist>(Shape &amp;shape)</arglist>
    </member>
    <member kind="variable">
      <type>DGtal::Color</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a14990dcb4093b295b4513cfbd4a42f8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DGtal::Color</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>ab56b383877616b74fd2366a973a0d5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lineWidth</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a10f239a1be403509720ef56fd9c3b56a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Shape::LineStyle</type>
      <name>lineStyle</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a9b57cdf3330a3f51879b9f6c120cf95b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Shape::LineCap</type>
      <name>lineCap</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a49db356e78665f538208b715a511ca5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Shape::LineJoin</type>
      <name>lineJoin</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a295e41f899d6cc23aa6e2ae29e66bedc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Fonts::Font</type>
      <name>font</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a7134ae750392b216157f9c2436931861</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fontSize</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a391127a1704233b3bbe7e90399ff9c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>unitFactor</name>
      <anchorfile>structLibBoard_1_1Board_1_1State.html</anchorfile>
      <anchor>a7f5aa553d629510522caec5d134e6e5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Path</name>
    <filename>structLibBoard_1_1Path.html</filename>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>ad526fd54379c0e2a98c8a9e8900aa87f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a3740d32ef36f08b9321c468202391959</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points, bool closedPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>adaeaa20feec7b56d42e2820ce14cfc41</anchor>
      <arglist>(bool closedPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a2a6afa321c864e5347557fd6a5de1662</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closed</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>aea1156c971908c4bb0b5361e8458a34a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a01af82b1961f2e3dfad757372c94820a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>size</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>ad5b3a2eeadaf3a5b89e71b1e53365551</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClosed</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a8ef97f313b2c8e08e4ecd9a797ac25b4</anchor>
      <arglist>(bool closed)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>aebc5527f99c25fa74d70f47625a3c0a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a6a9683996ed014e3e98e304a9dce859e</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>pop_back</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a450a8089868309cf9173de8d97de2f85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator[]</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a76e8482d8c47aee8b28f09eebbed7caa</anchor>
      <arglist>(const unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>const Point &amp;</type>
      <name>operator[]</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a0680436c69ee5491599214739e805631</anchor>
      <arglist>(const unsigned int n) const </arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>afec980ae4732d15c64a0172cceeddf3c</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a9d61fc2950e4b56e42e4734c9143442f</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a0ea809acdc26dc86d6ff26f5f796dc00</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a28f44ce86dce867cfc6c012c9de23cce</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>add3368038f9ec47964485f36b9a35b34</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a81759f840d3d012f2fee920a55f8a424</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a64aabf7932db9790f91321877bab5a94</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a91e522342e43861f23e760d387b10287</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a5cbcc41621bc65e386438d5924746844</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a15aef05db6e69be68bfe3789c566ae15</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>ab7384f86cc069607b10ef41c702e35f3</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a5a1d0f17c12974e1580b02f17239d532</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>aeb0389bad6f79f614af319da9ebd9f04</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVGPoints</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a470e295894d46892612f3245c8df127c</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVGCommands</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a1bd3f231c2047edc52d9d3bab0ebef1f</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZPoints</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a3aed96a87f17a7322c681ec3ed108e46</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>ad88cdc006fddbefcfdf4780d0bebfc47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Point &gt;</type>
      <name>_points</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a6369c90f0336abc0177e23771a8ef7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_closed</name>
      <anchorfile>structLibBoard_1_1Path.html</anchorfile>
      <anchor>a60d5b624e538ba5f108c705aebef61ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Point</name>
    <filename>structLibBoard_1_1Point.html</filename>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>aefb5946cccb835e76dcafddfd41c3a9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>aa2d012e65e618abea4ea0cb99efb7f63</anchor>
      <arglist>(const Point &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>a9ab61675e5f218c362e58302bf929240</anchor>
      <arglist>(double xc, double yc)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>aa5544eab734bbadf99eae715011c4afd</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>a1100b8d8c5eea0fdc167e56b56391c61</anchor>
      <arglist>(double &amp;xout, double &amp;yout) const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>af73677fdfb71cd38bc7a511f6078a060</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>aaf22508fea142493915e9b2c2a567422</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>a0006a94b0952ff8fc932252c75799219</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator+=</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>a2fb25f39f7d1d0faef8841ae8263848e</anchor>
      <arglist>(const Point &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator-=</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>a08544e1691a21dd31ebaee4ea9adaad2</anchor>
      <arglist>(const Point &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator*=</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>a702cb8baf834e5336d1137e27804ac0a</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator/=</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>a3f7d9c5987ad8e8981b3df8c0081ad85</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator-</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>a1a46a023d9a0efb45326d77e999ad037</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>norm</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>a68523c57472dbcadfa99252a2b95c767</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>aa50eb2dc7352012d08fbeb825fc9f551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>structLibBoard_1_1Point.html</anchorfile>
      <anchor>a59bbae6ebea99dc48393e4ed3e85da46</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Rect</name>
    <filename>structLibBoard_1_1Rect.html</filename>
    <member kind="function">
      <type></type>
      <name>Rect</name>
      <anchorfile>structLibBoard_1_1Rect.html</anchorfile>
      <anchor>a2805e84d9c3ee07561a262e29de201d3</anchor>
      <arglist>(double leftX=0.0f, double topY=0.0f, double rectWidth=0.0f, double rectHeight=0.0f)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>topLeft</name>
      <anchorfile>structLibBoard_1_1Rect.html</anchorfile>
      <anchor>a8f6512c28968446ba130ef48899bf668</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>topRight</name>
      <anchorfile>structLibBoard_1_1Rect.html</anchorfile>
      <anchor>a36afb50f4102928759d2457e06f7b3d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>bottomLeft</name>
      <anchorfile>structLibBoard_1_1Rect.html</anchorfile>
      <anchor>a0bbbfa3af871a397d4847177e70178f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>bottomRight</name>
      <anchorfile>structLibBoard_1_1Rect.html</anchorfile>
      <anchor>a136c556b6ca5b9986afdf7075998c999</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>left</name>
      <anchorfile>structLibBoard_1_1Rect.html</anchorfile>
      <anchor>ac78a014012703279c2568269139ac68e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>top</name>
      <anchorfile>structLibBoard_1_1Rect.html</anchorfile>
      <anchor>ad0cc80beee9215d3f0d6a424a8f7124d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>width</name>
      <anchorfile>structLibBoard_1_1Rect.html</anchorfile>
      <anchor>aaa1f4c2ad0096aaa1d5c730ed5d369ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>height</name>
      <anchorfile>structLibBoard_1_1Rect.html</anchorfile>
      <anchor>a51c1eddb12ae0a6848734c887d3869fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::ShapeList</name>
    <filename>structLibBoard_1_1ShapeList.html</filename>
    <base>LibBoard::Shape</base>
    <member kind="function">
      <type></type>
      <name>ShapeList</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a51555869437fc25ab717f4358b01111c</anchor>
      <arglist>(int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShapeList</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a1e58b8de6e59b1481cafc95c88ca5a46</anchor>
      <arglist>(const ShapeList &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShapeList</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a3c3180fbb8f7e1c3bd2647fc95afaa14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a56f6c0f05725c0a1dd59774a014c351b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>clear</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>af8042ae0a40b199b30a779b44806e8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a8abdb830e1ff746a1886d644394b392b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a32fcab74f4aa76f735d828c9107a98f0</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>aa24a3213d11a712fcd488220c95c5527</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a315cb223409547e28c2daf578d26a8e8</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>aed287253d31092f1b0ea9eefb42515f3</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a54e0119c82ecdc8707f2366f49c4478d</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a95760bfc6da451c05d035b2f4489dbef</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a7b5fd665e4882b69dd003df2072b8902</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a93e48e4e15421c67151c99e931d4f119</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a153cfa91152f04860e3c0adc27f21ce8</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>ab610a1757fcd3c8c0e67642a386ff397</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>adc1718c27806f84cf9125ab89ced45b8</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a86200816483f4f967c358387ac3a4f5d</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a81e7b3cf640caaed78d9457ae4fa6e8c</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>af44437cf9c85b571653842710d4684d4</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>ad97db08c773c919802c18bfee42d5ecd</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>ab3577e7304d242e94f4f666ae2f643cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>minDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a5780af572b0b816968b1bf11e651f63f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>maxDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a00f78867601114717f8063d2ba95cda4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a5c5f1c64c2d485200fab2a95c01103a5</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>Shape *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a10665ce1538d11baa2db41a695d313f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>operator=</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>ac4d88c28a228c80e76b8b95b4b9f0048</anchor>
      <arglist>(const ShapeList &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>abaf56f30442af80fb7c61102e67a2744</anchor>
      <arglist>(const Shape &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>operator+=</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>abee0adb9221254240697552bf1dfab56</anchor>
      <arglist>(const Shape &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>insert</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a6b0ce3a1cdbe3e9dc392d651680a8ed9</anchor>
      <arglist>(const Shape &amp;shape, int depth)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>dup</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a7934bacbd7748570e9d7ead96b01d0e6</anchor>
      <arglist>(unsigned int copies=1)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>last</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a88822818943730fee4bba48f25d57aa6</anchor>
      <arglist>(const unsigned int position=0)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>last</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>af2e0aff565ffca3e73ea99cde18c2aff</anchor>
      <arglist>(const unsigned int position=0)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>top</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a302f50681e15572df011ef97f66c1c07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addShape</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a0e02eec9eb323bffea0ed336e76aee3f</anchor>
      <arglist>(const Shape &amp;shape, double scaleFactor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>free</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a1b03baf7babb01825e9a087fd5e2e06f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>svgProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a0e7e0cfca67d9953afbf534091c5ea40</anchor>
      <arglist>(const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>postscriptProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7544f9a093c60457a42268a39064543a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>tikzProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a47117ccbb8c57a4569fa6b0b0246cc46</anchor>
      <arglist>(const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Shape * &gt;</type>
      <name>_shapes</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a4caa9fc2809888d0cb1a708ca9a1c238</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_nextDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a28ff4c73f30f245a2e779be447db3079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a98ee1459b2f0114bb4afd4d3bd4ff4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ButtCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368aa26d3fdce6499d0eb8d8b677db3269f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368ad2b5f9290405771e387b70d62ae0c194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368af51ba83a785ff46338b9798783b40ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ada55cbaa884d12a2bad755bbb5dfdc20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2abff2d9f2c1448ab19f2276a143700f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ab1799500356c37246ac516de18f88b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ace5efd99787d086d59b6892c4c310cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2c6dfa93e107a48f23c1b1bb6c7f93ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a3781ca5a084a9e042cd1ae5ea0acee46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ae95ac4da205529eac9726107d645232f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a7b71c52014120ab8ca00b30ba3e8dc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2151647e67c1a9b081b4ec077b9d1cae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Group</name>
    <filename>structLibBoard_1_1Group.html</filename>
    <base>LibBoard::ShapeList</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a8ddd37a5155b2ea9a31e4f3e668ff1e9</anchor>
      <arglist>(int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a4413eddd560e4d9e78db4a632bb81e8d</anchor>
      <arglist>(const Group &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Group</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a7a07ed530ea9390a949c7551af461323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>abf9bb62c76fee363499029b58bba966f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a29c96d5c21218a2219bfe21e6156cd91</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a29988aef183aa6f9b6ce29e05949d565</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Group</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a52cf3eb792dd2bb93f2211cebf889c36</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Group</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a669d4b8226da8635c4bca60ede453fb8</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>aba79101133b2784eec157faabf9243e4</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Group</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>ab155a545d432e3d25326558591b74046</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>abd9f14c616dc96aa9590cc017f642ac6</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a9ae837e9fe45273d21b8dc3b64f06978</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Group</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a8dea23aabe350c078e9d19472176e53d</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Group</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a00fb957a46fb08c370fc7cfec3e57292</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClippingRectangle</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>ac545aa8e1b8781d680b47cb050bc459b</anchor>
      <arglist>(float x, float y, float width, float height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClippingPath</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>ac50b2f2f95d2575b1d9cb31f7773de96</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClippingPath</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>ae5c37323a52a9cc0ab64eeda6a7a0056</anchor>
      <arglist>(const Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>ad9f2dcbe3de0e61e29cd1b93268f9b0a</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a66e278e56657ff584f6f29eeeee76f72</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a35e4024b5593e173f78a5e9b05576f0f</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>ad8b8aebd29449dd4a0abafb55d79c69f</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Group &amp;</type>
      <name>operator=</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>aaf7f78fc6c3773477e436cb1a38e6174</anchor>
      <arglist>(const Group &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Shape *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a0de67d21a1b31842ca1d2b7b3ad02e07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a7e7cf807501ad801ca772107dca8720b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShapeList</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a51555869437fc25ab717f4358b01111c</anchor>
      <arglist>(int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShapeList</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a1e58b8de6e59b1481cafc95c88ca5a46</anchor>
      <arglist>(const ShapeList &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShapeList</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a3c3180fbb8f7e1c3bd2647fc95afaa14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>clear</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>af8042ae0a40b199b30a779b44806e8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a8abdb830e1ff746a1886d644394b392b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>adc1718c27806f84cf9125ab89ced45b8</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>minDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a5780af572b0b816968b1bf11e651f63f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>maxDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a00f78867601114717f8063d2ba95cda4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a5c5f1c64c2d485200fab2a95c01103a5</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>operator=</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>ac4d88c28a228c80e76b8b95b4b9f0048</anchor>
      <arglist>(const ShapeList &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>abaf56f30442af80fb7c61102e67a2744</anchor>
      <arglist>(const Shape &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>operator+=</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>abee0adb9221254240697552bf1dfab56</anchor>
      <arglist>(const Shape &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>insert</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a6b0ce3a1cdbe3e9dc392d651680a8ed9</anchor>
      <arglist>(const Shape &amp;shape, int depth)</arglist>
    </member>
    <member kind="function">
      <type>ShapeList &amp;</type>
      <name>dup</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a7934bacbd7748570e9d7ead96b01d0e6</anchor>
      <arglist>(unsigned int copies=1)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>last</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a88822818943730fee4bba48f25d57aa6</anchor>
      <arglist>(const unsigned int position=0)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>last</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>af2e0aff565ffca3e73ea99cde18c2aff</anchor>
      <arglist>(const unsigned int position=0)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>top</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a302f50681e15572df011ef97f66c1c07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Path</type>
      <name>_clippingPath</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a113d8a5bbe3b9f53a6e7ab30564e7f24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a5ee2bbbb15b07c461327179d22b8d753</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static unsigned int</type>
      <name>_clippingCount</name>
      <anchorfile>structLibBoard_1_1Group.html</anchorfile>
      <anchor>a0431e986bcc09f212f04d1c40c24a7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addShape</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a0e02eec9eb323bffea0ed336e76aee3f</anchor>
      <arglist>(const Shape &amp;shape, double scaleFactor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>free</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a1b03baf7babb01825e9a087fd5e2e06f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>svgProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a0e7e0cfca67d9953afbf534091c5ea40</anchor>
      <arglist>(const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>postscriptProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7544f9a093c60457a42268a39064543a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>tikzProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a47117ccbb8c57a4569fa6b0b0246cc46</anchor>
      <arglist>(const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Shape * &gt;</type>
      <name>_shapes</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a4caa9fc2809888d0cb1a708ca9a1c238</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_nextDepth</name>
      <anchorfile>structLibBoard_1_1ShapeList.html</anchorfile>
      <anchor>a28ff4c73f30f245a2e779be447db3079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Shape</name>
    <filename>structLibBoard_1_1Shape.html</filename>
    <member kind="enumeration">
      <name>LineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ButtCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368aa26d3fdce6499d0eb8d8b677db3269f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368ad2b5f9290405771e387b70d62ae0c194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368af51ba83a785ff46338b9798783b40ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ada55cbaa884d12a2bad755bbb5dfdc20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2abff2d9f2c1448ab19f2276a143700f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ab1799500356c37246ac516de18f88b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ace5efd99787d086d59b6892c4c310cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2c6dfa93e107a48f23c1b1bb6c7f93ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a3781ca5a084a9e042cd1ae5ea0acee46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ae95ac4da205529eac9726107d645232f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a7b71c52014120ab8ca00b30ba3e8dc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2151647e67c1a9b081b4ec077b9d1cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a117f49d8787a621874e41d5838c7d1d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Shape *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad7871a507e4fd0218452d097fea1ae68</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab3cd8c9a183818c1765dd3a7dad072db</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Shape &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adb7cb27eabc6fae81fd5edc52da314a9</anchor>
      <arglist>(double angle, const Point &amp;center)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Shape &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>afa039e72e735987002a07db4c3e9cd7e</anchor>
      <arglist>(double angle)=0</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Shape &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a98ef9295c8050ef4dcc39befd7dab636</anchor>
      <arglist>(double dx, double dy)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a9e9f45db9a3014c993d10baf70f081a9</anchor>
      <arglist>(double sx, double sy)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adabfc65bdd0a1edd59b2cb0cd3f05b4f</anchor>
      <arglist>(double s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a69cada45cb68f046ad7a084a3b81e889</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2739283de63ccfac9ad168d942091726</anchor>
      <arglist>(double s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a36f26f80d40f80dd32377dd9f65ccd1d</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a0bc5410089c4405e23b6414b0d49dff1</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ade78370814a66b143dbcfb4209e1cbea</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a1f7212ac3712a3ed258909ea552fc19d</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const =0</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>svgProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a0e7e0cfca67d9953afbf534091c5ea40</anchor>
      <arglist>(const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>postscriptProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7544f9a093c60457a42268a39064543a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>tikzProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a47117ccbb8c57a4569fa6b0b0246cc46</anchor>
      <arglist>(const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aa751ed891b5d84cb3d4555c849415846</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Dot</name>
    <filename>structLibBoard_1_1Dot.html</filename>
    <base>LibBoard::Shape</base>
    <member kind="function">
      <type></type>
      <name>Dot</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a16ae31693f212211a5ca04d9ffb7155e</anchor>
      <arglist>(double x, double y, DGtal::Color color, double lineWidth, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a21aaabf9c31ac80337dac2a313c8f684</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>ad0ebe7778c81eaf7ce5a715076f74a3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Dot &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a2d7130a0723e0f281178cd0ea9c24d4b</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Dot</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a43a54f51f92053e7812c9d3472c415e0</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Dot &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>afe1a0d4cf79834b537bbfbd19c29898f</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Dot</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a8707d2080045f45fb2dfdc1fed803c42</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Dot &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>aa59be93851c2959f4d4ad05480c5f44d</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Dot</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a665b91736d912ef40145465a0814e7bd</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>ab3453f3fc4dd7af152bf97ff9bf542cc</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a3d383c067cc4990da47fd87520af5ece</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Dot</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>acadcfcd49c713a016075987fa9691b77</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Dot</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a96005cc58a2e1af6b11704837f876a07</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>affe0290632fc1b0e3b9694832d52cb64</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a348b0f89c3fbb3521554de220e627d3b</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>ad3edd514b0fd351ad673325a2f12e308</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>adf7f88b6da3787a751f0896d8718d4f7</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>ac878f9ccab2ecc3846c60ba302c5a5b9</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a9d19d15df78674dd27c35c93c4e46943</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Dot *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a4b49e10c1d52dd8398c21e5625555706</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_x</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>ab4b82380a423f287c8ab1bef3318d398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_y</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>a5b24868a4d2daa85ae8df69dedbda0b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Dot.html</anchorfile>
      <anchor>aa04982864cbe738d431416ef30a4a439</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ButtCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368aa26d3fdce6499d0eb8d8b677db3269f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368ad2b5f9290405771e387b70d62ae0c194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368af51ba83a785ff46338b9798783b40ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ada55cbaa884d12a2bad755bbb5dfdc20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2abff2d9f2c1448ab19f2276a143700f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ab1799500356c37246ac516de18f88b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ace5efd99787d086d59b6892c4c310cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2c6dfa93e107a48f23c1b1bb6c7f93ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a3781ca5a084a9e042cd1ae5ea0acee46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ae95ac4da205529eac9726107d645232f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a7b71c52014120ab8ca00b30ba3e8dc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2151647e67c1a9b081b4ec077b9d1cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>svgProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a0e7e0cfca67d9953afbf534091c5ea40</anchor>
      <arglist>(const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>postscriptProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7544f9a093c60457a42268a39064543a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>tikzProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a47117ccbb8c57a4569fa6b0b0246cc46</anchor>
      <arglist>(const TransformTikZ &amp;transform) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Line</name>
    <filename>structLibBoard_1_1Line.html</filename>
    <base>LibBoard::Shape</base>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a0fe4b01f7f8867fe2ede191bde4b7de4</anchor>
      <arglist>(double x1, double y1, double x2, double y2, DGtal::Color color, double lineWidth, const LineStyle style=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a7a5da60673154e3103c579878327c898</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>acbe20e565ac8d280e2331e66d181c7c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Line &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a0135dff71fc7125c9d69708b592ecbe0</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a44cd88b25147e2e1a066f9f520bb874b</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Line &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>aebf27ccb69e39fc4bbde9f749a298679</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a3b54c68d376d6e1fcdadfd32d51ce160</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Line &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a8c491a4b78cd9887b14667481035fa2c</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>aebd71d54690406ed38209b68671e8ab0</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>aa683d861468066b9325d32273f5c7362</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>abcbb3387a6c5047b5ca133988332e6d1</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a8803d93b7fba87179418d367cd867d52</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>ab2785acda00f6542f0aa5b135a9c7258</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a1ae80611bf829c426e9ee503fee41b3a</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>ad1c48aa14d2086905297e2d971ea0504</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a989dccea824583d3ba35a0061b9ecc55</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a4c334baffe7b77f563128e8efb34636d</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a053a7ba27178dc91c1c49df986b48e1b</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>ac31888d38cb6fb7ea3450ff00818b35b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Line *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a0ae64f0aff0dfc05fdbeebb465335bc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_x1</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a7c02d097b3096d61a48b67f8ffaa6fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_y1</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a85cfc5e782912bd6deae7a7834286a9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_x2</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a853d21de77c6bd97442687d68ea6b29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_y2</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>ab4c24d5580ac5a51a85a0fe09374b86b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>aaa273aa6297ae26ce6a3e6f33a010452</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ButtCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368aa26d3fdce6499d0eb8d8b677db3269f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368ad2b5f9290405771e387b70d62ae0c194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368af51ba83a785ff46338b9798783b40ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ada55cbaa884d12a2bad755bbb5dfdc20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2abff2d9f2c1448ab19f2276a143700f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ab1799500356c37246ac516de18f88b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ace5efd99787d086d59b6892c4c310cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2c6dfa93e107a48f23c1b1bb6c7f93ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a3781ca5a084a9e042cd1ae5ea0acee46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ae95ac4da205529eac9726107d645232f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a7b71c52014120ab8ca00b30ba3e8dc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2151647e67c1a9b081b4ec077b9d1cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>svgProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a0e7e0cfca67d9953afbf534091c5ea40</anchor>
      <arglist>(const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>postscriptProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7544f9a093c60457a42268a39064543a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>tikzProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a47117ccbb8c57a4569fa6b0b0246cc46</anchor>
      <arglist>(const TransformTikZ &amp;transform) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Arrow</name>
    <filename>structLibBoard_1_1Arrow.html</filename>
    <base>LibBoard::Line</base>
    <member kind="function">
      <type></type>
      <name>Arrow</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>a00149df7ba29a6dc61e4762c01cebab3</anchor>
      <arglist>(double x1, double y1, double x2, double y2, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle style=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>a6ca789e7604307b6249a22a8546f2309</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Arrow</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>aa5f21c62f8436d076a200dee3a672ea1</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Arrow</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>acf39da28bd6ab33f10d15914149db2ae</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Arrow</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>af25183352fb20c5e77da8f554d14a2e2</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Arrow</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>aed50ec5c942da36f57e725cd9d384caf</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Arrow</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>a8b69e488eb63044f6c324fee1af26db1</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>aafb01819699756a3a4f327c3765341c6</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>aff09ac20c47667c2a20a8890fff36699</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>ac610c5b785d9da2803a1c40ba35f2b70</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>a251dcdf66da68cd09af5be8abc45bf9e</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Arrow *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>a4f1b356a8dfd792e9a1b614fc1cea110</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a0fe4b01f7f8867fe2ede191bde4b7de4</anchor>
      <arglist>(double x1, double y1, double x2, double y2, DGtal::Color color, double lineWidth, const LineStyle style=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>acbe20e565ac8d280e2331e66d181c7c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Line &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a0135dff71fc7125c9d69708b592ecbe0</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Line &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>aebf27ccb69e39fc4bbde9f749a298679</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Line &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a8c491a4b78cd9887b14667481035fa2c</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>aa683d861468066b9325d32273f5c7362</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>abcbb3387a6c5047b5ca133988332e6d1</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a1ae80611bf829c426e9ee503fee41b3a</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>ac31888d38cb6fb7ea3450ff00818b35b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Arrow.html</anchorfile>
      <anchor>a8f64ad9f0962e9bd43a017a20e88c275</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_x1</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a7c02d097b3096d61a48b67f8ffaa6fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_y1</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a85cfc5e782912bd6deae7a7834286a9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_x2</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>a853d21de77c6bd97442687d68ea6b29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_y2</name>
      <anchorfile>structLibBoard_1_1Line.html</anchorfile>
      <anchor>ab4c24d5580ac5a51a85a0fe09374b86b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Polyline</name>
    <filename>structLibBoard_1_1Polyline.html</filename>
    <base>LibBoard::Shape</base>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a5bc7e5968b82c3f01dd8b13bd05424ad</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points, bool closed, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>afcd543c1e62456eed6e273f1ff1fb9c7</anchor>
      <arglist>(const Path &amp;path, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ac282691508cb6b51cefa85c3d9bd6ae6</anchor>
      <arglist>(bool closed, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a80a2652f876009f7ef956b4727904c35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ab301f9277a343a4b0285fceef4956472</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a42ba9cf840ac762c5e110e0f9130e653</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator[]</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a542b306d20ff7d6a26dd8aac6113ba2b</anchor>
      <arglist>(const unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a4e3ba6a56334b38282bc78d57c7bf537</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Polyline</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>aae2962046e480671ce3cad514d42acf7</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a1ec1ce0afb0aff63c3eabd08ac95be47</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Polyline</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a3cfd56a4b5fac3d75bc75f4c35c87bba</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ac294e654791d81d0874d26a7296a737a</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Polyline</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>aa904376bd976c53c8c5eb9690c73882c</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a3b8055a39c983fa34bc4424681c4aa4c</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ad04cb98caa0334c7c184394a34aab6d4</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Polyline</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a36610626fab36edd112d8c36d3e2f465</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Polyline</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a1a85358c2f1aeadb5e2159df8f16c51d</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a5de34ca6db2849eb681cd90e6dfb9041</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a31ff01d8f31e8344fefdd3ae71a12aed</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a3b82bad1ef1601e34f7bc4b462985038</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a97227f8cd844f59ffad82d0589aca78e</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>af06716bf8c67110edf4b45de94f52bb4</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a18d918860fafef15532b7f8d6b908984</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Polyline *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a1bf2f3617b2cff0abba165ef965f4ef1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>_path</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>aed81034a7d2e4b59752871a047d21ced</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>afdfe876d8cb5f7cfd85fd927e18fa02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ButtCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368aa26d3fdce6499d0eb8d8b677db3269f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368ad2b5f9290405771e387b70d62ae0c194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368af51ba83a785ff46338b9798783b40ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ada55cbaa884d12a2bad755bbb5dfdc20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2abff2d9f2c1448ab19f2276a143700f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ab1799500356c37246ac516de18f88b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ace5efd99787d086d59b6892c4c310cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2c6dfa93e107a48f23c1b1bb6c7f93ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a3781ca5a084a9e042cd1ae5ea0acee46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ae95ac4da205529eac9726107d645232f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a7b71c52014120ab8ca00b30ba3e8dc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2151647e67c1a9b081b4ec077b9d1cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>svgProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a0e7e0cfca67d9953afbf534091c5ea40</anchor>
      <arglist>(const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>postscriptProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7544f9a093c60457a42268a39064543a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>tikzProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a47117ccbb8c57a4569fa6b0b0246cc46</anchor>
      <arglist>(const TransformTikZ &amp;transform) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Rectangle</name>
    <filename>structLibBoard_1_1Rectangle.html</filename>
    <base>LibBoard::Polyline</base>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a3e0c2cca1c836c7d18d933cef6ae921c</anchor>
      <arglist>(double x, double y, double width, double height, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle style=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a85d22d07bd4fa98e9d50235ac7c553f6</anchor>
      <arglist>(const Rect &amp;rect, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle style=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>ab07912d5fec3b8f92c1581c1e12af24f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>aa3322f5c20f7d3b18b9e14545a31ee87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>ac52c89f1b00422cd6e665f0ee672967e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a237e15d6581b171b42479b28c5e30a14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a64aa9555a7c402ae9e3733d55c408312</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>topLeft</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a0aa1a3905cacaa56c7f52b4c02fdd59a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>topRight</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>af7f1631e0ae1650d666402e9b74b7ade</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>bottomLeft</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a378a11ca92fb2f45e4b2e6dacdb711c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>bottomRight</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a7ea1c01bfdc464885a579afb516dbe47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>aa7c6ad4b42713f662ad91196904e0c90</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a9b12816b8ca1998b1828d89d4e730d73</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>ae2efca8c288bf20e70c5fd479f089789</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a356042c24d306fe24c17614bce8cbbf5</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>aa91a3dbfd14f7989906a85a0b335a4d9</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>aa10a6cff447d23f0dc9656aa73cf88ad</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a6abc70fadfd249cd5fb42d9d5a11c7e8</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a3de89e671c6c29f16c1a7aad9a95ddaa</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a78c5455cc4e8b3a4385c95c7a75af79b</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a3dec9c32d5d223306c081f864fc1223b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a5bc7e5968b82c3f01dd8b13bd05424ad</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points, bool closed, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>afcd543c1e62456eed6e273f1ff1fb9c7</anchor>
      <arglist>(const Path &amp;path, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ac282691508cb6b51cefa85c3d9bd6ae6</anchor>
      <arglist>(bool closed, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ab301f9277a343a4b0285fceef4956472</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a42ba9cf840ac762c5e110e0f9130e653</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator[]</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a542b306d20ff7d6a26dd8aac6113ba2b</anchor>
      <arglist>(const unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a4e3ba6a56334b38282bc78d57c7bf537</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a1ec1ce0afb0aff63c3eabd08ac95be47</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ac294e654791d81d0874d26a7296a737a</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a3b8055a39c983fa34bc4424681c4aa4c</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ad04cb98caa0334c7c184394a34aab6d4</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a31ff01d8f31e8344fefdd3ae71a12aed</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a18d918860fafef15532b7f8d6b908984</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_isRectangle</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a6148d2aeb5ff16a536fd36d725a8f85e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>_path</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>aed81034a7d2e4b59752871a047d21ced</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>ad4b820117e6e5bf110c0e08e12f90d14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Image</name>
    <filename>structLibBoard_1_1Image.html</filename>
    <base>LibBoard::Rectangle</base>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>af2fff2af1985c2f8869c4199abdbdc1a</anchor>
      <arglist>(double x0, double y0, double width, double height, std::string fileName, int depthValue, double alpha=1.0)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>abd4a1d1977c9692e383c6c462963303a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>a125a368027110937a437c483bf267783</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>ac8a0542013fca9faead1be9b22f35f1d</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>a1456a418b5993391bcdd2d35db01e2e8</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>ae733d0ce8c9e4e5467dd554d49a537e4</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a3e0c2cca1c836c7d18d933cef6ae921c</anchor>
      <arglist>(double x, double y, double width, double height, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle style=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a85d22d07bd4fa98e9d50235ac7c553f6</anchor>
      <arglist>(const Rect &amp;rect, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle style=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>aa3322f5c20f7d3b18b9e14545a31ee87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>ac52c89f1b00422cd6e665f0ee672967e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a237e15d6581b171b42479b28c5e30a14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a64aa9555a7c402ae9e3733d55c408312</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>topLeft</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a0aa1a3905cacaa56c7f52b4c02fdd59a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>topRight</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>af7f1631e0ae1650d666402e9b74b7ade</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>bottomLeft</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a378a11ca92fb2f45e4b2e6dacdb711c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>bottomRight</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a7ea1c01bfdc464885a579afb516dbe47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>aa7c6ad4b42713f662ad91196904e0c90</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a9b12816b8ca1998b1828d89d4e730d73</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>ae2efca8c288bf20e70c5fd479f089789</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a356042c24d306fe24c17614bce8cbbf5</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>aa91a3dbfd14f7989906a85a0b335a4d9</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>aa10a6cff447d23f0dc9656aa73cf88ad</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a5bc7e5968b82c3f01dd8b13bd05424ad</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points, bool closed, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>afcd543c1e62456eed6e273f1ff1fb9c7</anchor>
      <arglist>(const Path &amp;path, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ac282691508cb6b51cefa85c3d9bd6ae6</anchor>
      <arglist>(bool closed, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ab301f9277a343a4b0285fceef4956472</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a42ba9cf840ac762c5e110e0f9130e653</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator[]</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a542b306d20ff7d6a26dd8aac6113ba2b</anchor>
      <arglist>(const unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a4e3ba6a56334b38282bc78d57c7bf537</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a1ec1ce0afb0aff63c3eabd08ac95be47</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ac294e654791d81d0874d26a7296a737a</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a3b8055a39c983fa34bc4424681c4aa4c</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ad04cb98caa0334c7c184394a34aab6d4</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a31ff01d8f31e8344fefdd3ae71a12aed</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a18d918860fafef15532b7f8d6b908984</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_x0</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>af7a1a3f43012409177f173b47d15fd4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_y0</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>a2ee77032d7b3c1059516d7ba5a318ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_width</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>aaa2c8ad97c79f85bcbe3b2888de82ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_height</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>a421bfc0640730730ea8bfba6b9a28ceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_filename</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>a572ec7f565db730c5218280dc394c889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_alpha</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>afa36769a93fa4130c7b5ac32aefe57a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_isRectangle</name>
      <anchorfile>structLibBoard_1_1Rectangle.html</anchorfile>
      <anchor>a6148d2aeb5ff16a536fd36d725a8f85e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>_path</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>aed81034a7d2e4b59752871a047d21ced</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Image.html</anchorfile>
      <anchor>ac8c7309cecb10d5ef017812109b33885</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Triangle</name>
    <filename>structLibBoard_1_1Triangle.html</filename>
    <base>LibBoard::Polyline</base>
    <member kind="function">
      <type></type>
      <name>Triangle</name>
      <anchorfile>structLibBoard_1_1Triangle.html</anchorfile>
      <anchor>a6b53458749694e17a7cbb8813057bac6</anchor>
      <arglist>(const Point &amp;p1, const Point &amp;p2, const Point &amp;p3, DGtal::Color pen, DGtal::Color fill, double lineWidth, const LineStyle style=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triangle</name>
      <anchorfile>structLibBoard_1_1Triangle.html</anchorfile>
      <anchor>a2e79b3ba6d2d03daef7af5008608bab6</anchor>
      <arglist>(const double x1, const double y1, const double x2, const double y2, const double x3, const double y3, DGtal::Color pen, DGtal::Color fill, double lineWidth, const LineStyle style=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Triangle.html</anchorfile>
      <anchor>a5dbc5bafbe8e02a4bd7cb3e024f1fc5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Triangle.html</anchorfile>
      <anchor>aa4875d68379cd8efd0cc0bd249570007</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Triangle.html</anchorfile>
      <anchor>abab0436532a919a63cbee318a1414a13</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Triangle.html</anchorfile>
      <anchor>a1d74e82bcdc67e49ca8be1f7c90e5d15</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Triangle.html</anchorfile>
      <anchor>a50d28f1fe8de54af51f6b3d9250685e4</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Triangle *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Triangle.html</anchorfile>
      <anchor>a919063e01e6243fbf39c1845b425c28a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a5bc7e5968b82c3f01dd8b13bd05424ad</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points, bool closed, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>afcd543c1e62456eed6e273f1ff1fb9c7</anchor>
      <arglist>(const Path &amp;path, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ac282691508cb6b51cefa85c3d9bd6ae6</anchor>
      <arglist>(bool closed, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ab301f9277a343a4b0285fceef4956472</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a42ba9cf840ac762c5e110e0f9130e653</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator[]</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a542b306d20ff7d6a26dd8aac6113ba2b</anchor>
      <arglist>(const unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a4e3ba6a56334b38282bc78d57c7bf537</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Polyline</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>aae2962046e480671ce3cad514d42acf7</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a1ec1ce0afb0aff63c3eabd08ac95be47</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ac294e654791d81d0874d26a7296a737a</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a3b8055a39c983fa34bc4424681c4aa4c</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ad04cb98caa0334c7c184394a34aab6d4</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a5de34ca6db2849eb681cd90e6dfb9041</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a31ff01d8f31e8344fefdd3ae71a12aed</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a3b82bad1ef1601e34f7bc4b462985038</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a97227f8cd844f59ffad82d0589aca78e</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>af06716bf8c67110edf4b45de94f52bb4</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a18d918860fafef15532b7f8d6b908984</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Triangle.html</anchorfile>
      <anchor>a459610207ecc1b058bf691c3359b85e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>_path</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>aed81034a7d2e4b59752871a047d21ced</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::GouraudTriangle</name>
    <filename>structLibBoard_1_1GouraudTriangle.html</filename>
    <base>LibBoard::Polyline</base>
    <member kind="function">
      <type></type>
      <name>GouraudTriangle</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>ab83c41027c784a79df60b516731df075</anchor>
      <arglist>(const Point &amp;p0, const DGtal::Color &amp;color0, const Point &amp;p1, const DGtal::Color &amp;color1, const Point &amp;p2, const DGtal::Color &amp;color2, int subdivisions, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GouraudTriangle</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a648e842d8a8d877202dfc0a1aea0f442</anchor>
      <arglist>(const Point &amp;p0, float brightness0, const Point &amp;p1, float brightness1, const Point &amp;p2, float brightness2, const DGtal::Color &amp;fillColor, int subdivisions, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>aa2dab39a9df27c0e06d42e677792d34e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a9ddc84f1bc67d9b2b502b3eb32494b92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GouraudTriangle &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a6f097e2c3534447e31d068aeb3d644e0</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>GouraudTriangle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a8c8a26b874f4cb1ecbc9498cc3acec4e</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>GouraudTriangle &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a2c29bb312afe953477ad60850f138285</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>GouraudTriangle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>ad23570d96b077a8e62b8bf34e1c973a9</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>GouraudTriangle</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a54ebb3ce977b8d5d6e065c52f22a114d</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>GouraudTriangle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>acf6b3ac3001358f5d242b87a2f3e1628</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>GouraudTriangle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a6769cd8ea5be144a64b75509d6dfe756</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a29375a093bb5c4bf828523cfd546c40c</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a3ec620856373dbef55799fe0d5c93398</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a53c3c735678efb98b1f5c03e2d9bf25d</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>aca22e56a9743d4341d2dec9c57cfe435</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a8693065fdace30135c79acfc330fbc03</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>GouraudTriangle *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a59def8eb394e39e12d4bb5a1ee64c0eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a5bc7e5968b82c3f01dd8b13bd05424ad</anchor>
      <arglist>(const std::vector&lt; Point &gt; &amp;points, bool closed, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>afcd543c1e62456eed6e273f1ff1fb9c7</anchor>
      <arglist>(const Path &amp;path, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polyline</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ac282691508cb6b51cefa85c3d9bd6ae6</anchor>
      <arglist>(bool closed, DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, const LineStyle lineStyle=SolidStyle, const LineCap cap=ButtCap, const LineJoin join=MiterJoin, int depth=-1)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a42ba9cf840ac762c5e110e0f9130e653</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator[]</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a542b306d20ff7d6a26dd8aac6113ba2b</anchor>
      <arglist>(const unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>Polyline &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ac294e654791d81d0874d26a7296a737a</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a3b8055a39c983fa34bc4424681c4aa4c</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>ad04cb98caa0334c7c184394a34aab6d4</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>a18d918860fafef15532b7f8d6b908984</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_color0</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a4570f3dba5efb17e85fc133329d64062</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_color1</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>af6409d33604d89447609ca41d28a42d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_color2</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a8d286e529ab4d3e1a0aad44334569eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_subdivisions</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>a333a0a5c757ece4a97775b0aee393520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>_path</name>
      <anchorfile>structLibBoard_1_1Polyline.html</anchorfile>
      <anchor>aed81034a7d2e4b59752871a047d21ced</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1GouraudTriangle.html</anchorfile>
      <anchor>aed04ece911fe7e732f27c046c4defa25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Ellipse</name>
    <filename>structLibBoard_1_1Ellipse.html</filename>
    <base>LibBoard::Shape</base>
    <member kind="function">
      <type></type>
      <name>Ellipse</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a8f61f5ae11b5f2bb506d5d1b3e86fb89</anchor>
      <arglist>(double x, double y, double xRadius, double yRadius, DGtal::Color pen, DGtal::Color fill, double lineWidth, const LineStyle lineStyle=SolidStyle, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>ae004cfab2870e8c1e7f7681139440305</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a3c0cc1b114f47c49a484fe9e514cafe4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ellipse &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a7ebef8625592373e7fdabbd3698bfa76</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Ellipse</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>aafd52011c4879629c6380cfa07edc412</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Ellipse &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>ac095c0123aa391d96f525d3a0c384dc5</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Ellipse</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a0bbd4e55463d6304f4cd52e862a76023</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Ellipse &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>aee39bff802796059edbfda75143bdd63</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Ellipse</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a2aa8a5b048e62567f32792991397f796</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a3ab45dd9424547e1d3aa0c19f6fe2c94</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>afda2f61b326b89f9ba30eec7c65addb1</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Ellipse</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a88333f850698440df07b68cee2cbb15d</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Ellipse</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a6724485f74a93073b747335d365ecee1</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a190af08c7809fb41c704eed5aeb207f5</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a2ac032ea04c6cb15667baa00e6d8545b</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>adbe2ee64ee9e44298548bedb96b4a985</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>ab0079d127397bbb04beb5ff1096f2045</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>ab6df90385cf6fd66c7a9d01484f362ee</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a6e53aad68e1517dc0375c8614adf2876</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ellipse *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a1d6506b4f5439d42395170f912c8987b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Point</type>
      <name>_center</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a21dbb8efeb0f7b37096cba77d750a414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_xRadius</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a5914d3282fd0940cd0918bd32c8ebfee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_yRadius</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>ad27b466f3cead84b2964ecc86374b110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_angle</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>affb855c20d8758d354d8f48429988709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_circle</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a06df876a03172605b602e2ab99509872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a0cdff67a5c4af439816902636977d9ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ButtCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368aa26d3fdce6499d0eb8d8b677db3269f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368ad2b5f9290405771e387b70d62ae0c194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368af51ba83a785ff46338b9798783b40ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ada55cbaa884d12a2bad755bbb5dfdc20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2abff2d9f2c1448ab19f2276a143700f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ab1799500356c37246ac516de18f88b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ace5efd99787d086d59b6892c4c310cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2c6dfa93e107a48f23c1b1bb6c7f93ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a3781ca5a084a9e042cd1ae5ea0acee46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ae95ac4da205529eac9726107d645232f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a7b71c52014120ab8ca00b30ba3e8dc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2151647e67c1a9b081b4ec077b9d1cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>svgProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a0e7e0cfca67d9953afbf534091c5ea40</anchor>
      <arglist>(const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>postscriptProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7544f9a093c60457a42268a39064543a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>tikzProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a47117ccbb8c57a4569fa6b0b0246cc46</anchor>
      <arglist>(const TransformTikZ &amp;transform) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Circle</name>
    <filename>structLibBoard_1_1Circle.html</filename>
    <base>LibBoard::Ellipse</base>
    <member kind="function">
      <type></type>
      <name>Circle</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>ad58662a444e65b3c4272fe4746b5d582</anchor>
      <arglist>(double x, double y, double radius, DGtal::Color pen, DGtal::Color fill, double lineWidth, const LineStyle style=SolidStyle, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a9b1a7f22fc19cd77f0381804656aedae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>ac454c9012fc687041ba44f980d318a66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Circle &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a6d7d4700dab42e185e6a874f84fdb591</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a9a8ae8eb3ca580791a1329b6b72cf9db</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Circle &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a8e3fccc7d5abab574401ee3477cf9524</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a1fcf5d091a6e18908b44a41a42f2c842</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Circle &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a63a24dc09c9c6b1e303b7382495a5854</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>ae77dafc776240b7010d7ab3cf89e8202</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a9a518183b110145109eb7fcee8bc30ab</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>ac8b96e495b6e3c17936190633843ff6b</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>af7cf8a28c786630980f9b927a5e9341b</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a5ddcf5b21c512e9d3fb6551afbaffe85</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a0237da248586e36671f86c6b98023513</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a4a55ff6cb32408f244f9989508ea95a7</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a0031fe6e6bba240af14d2c3abe28faef</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Circle *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a33854f8e4f95e0e0bc5651e9b6f3f6d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ellipse</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a8f61f5ae11b5f2bb506d5d1b3e86fb89</anchor>
      <arglist>(double x, double y, double xRadius, double yRadius, DGtal::Color pen, DGtal::Color fill, double lineWidth, const LineStyle lineStyle=SolidStyle, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a2ac032ea04c6cb15667baa00e6d8545b</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>adbe2ee64ee9e44298548bedb96b4a985</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a6e53aad68e1517dc0375c8614adf2876</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a6a643adf4cc309d2f03c76199c9619e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Point</type>
      <name>_center</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a21dbb8efeb0f7b37096cba77d750a414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_xRadius</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a5914d3282fd0940cd0918bd32c8ebfee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_yRadius</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>ad27b466f3cead84b2964ecc86374b110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_angle</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>affb855c20d8758d354d8f48429988709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_circle</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a06df876a03172605b602e2ab99509872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Arc</name>
    <filename>structLibBoard_1_1Arc.html</filename>
    <base>LibBoard::Circle</base>
    <member kind="function">
      <type></type>
      <name>Arc</name>
      <anchorfile>structLibBoard_1_1Arc.html</anchorfile>
      <anchor>ae6e4ed44cf06d15f70142d843f04a0ee</anchor>
      <arglist>(double x, double y, double radius, double angle1, double angle2, bool negative, DGtal::Color pen, DGtal::Color fill, double lineWidth, const LineStyle style=SolidStyle, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Arc.html</anchorfile>
      <anchor>a7ad105041f91243ba72913b803f3be0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Arc.html</anchorfile>
      <anchor>aeb1a0367cebb70bb490ee8acf4fbbf61</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Arc.html</anchorfile>
      <anchor>a74a44be5ffce522c814b135142b2ea68</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Arc.html</anchorfile>
      <anchor>a1bca349885629a51339d3627f1f270c0</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Circle</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>ad58662a444e65b3c4272fe4746b5d582</anchor>
      <arglist>(double x, double y, double radius, DGtal::Color pen, DGtal::Color fill, double lineWidth, const LineStyle style=SolidStyle, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>ac454c9012fc687041ba44f980d318a66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Circle &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a6d7d4700dab42e185e6a874f84fdb591</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a9a8ae8eb3ca580791a1329b6b72cf9db</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Circle &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a8e3fccc7d5abab574401ee3477cf9524</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a1fcf5d091a6e18908b44a41a42f2c842</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Circle &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a63a24dc09c9c6b1e303b7382495a5854</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>ae77dafc776240b7010d7ab3cf89e8202</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a9a518183b110145109eb7fcee8bc30ab</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>ac8b96e495b6e3c17936190633843ff6b</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>af7cf8a28c786630980f9b927a5e9341b</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Circle</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a5ddcf5b21c512e9d3fb6551afbaffe85</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a0237da248586e36671f86c6b98023513</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Circle *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Circle.html</anchorfile>
      <anchor>a33854f8e4f95e0e0bc5651e9b6f3f6d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ellipse</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a8f61f5ae11b5f2bb506d5d1b3e86fb89</anchor>
      <arglist>(double x, double y, double xRadius, double yRadius, DGtal::Color pen, DGtal::Color fill, double lineWidth, const LineStyle lineStyle=SolidStyle, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>adbe2ee64ee9e44298548bedb96b4a985</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Ellipse.html</anchorfile>
      <anchor>a6e53aad68e1517dc0375c8614adf2876</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_angle1</name>
      <anchorfile>structLibBoard_1_1Arc.html</anchorfile>
      <anchor>a193e666227b4a3e53939d300716ae451</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_angle2</name>
      <anchorfile>structLibBoard_1_1Arc.html</anchorfile>
      <anchor>a4303e155c23d01f2815c306591f51340</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_negative</name>
      <anchorfile>structLibBoard_1_1Arc.html</anchorfile>
      <anchor>a087363a8fc23905534139e5818df2a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Arc.html</anchorfile>
      <anchor>a44876e7cf3c7dccdb3f4bc1f124dc7d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Text</name>
    <filename>structLibBoard_1_1Text.html</filename>
    <base>LibBoard::Shape</base>
    <member kind="function">
      <type></type>
      <name>Text</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a1c9d65f4e4a837612c0709657ad67d91</anchor>
      <arglist>(double x, double y, const std::string &amp;text, const Fonts::Font font, double size, DGtal::Color color=DGtal::Color::Black, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Text</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>ad1de546eeef361281ceec1d7b299dce0</anchor>
      <arglist>(double x, double y, const std::string &amp;text, const Fonts::Font font, const std::string &amp;svgFont, double size, DGtal::Color color=DGtal::Color::Black, int depthValue=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>ae1e3430aae743f418490ee5cee1fc265</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>aa58bf2b4f074108ed7905aed851e7b6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Text &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>abc7fc46217f5d6ee6a6be268a3c9c145</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Text</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>aa9e4e638fc71709d796385e9d07de07e</anchor>
      <arglist>(double angle, const Point &amp;center) const </arglist>
    </member>
    <member kind="function">
      <type>Text &amp;</type>
      <name>rotate</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a88d2bf89949b5d1826f19806a33af12b</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Text</type>
      <name>rotated</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>adeb795dd1802056d5fe03cf0a1980ae0</anchor>
      <arglist>(double angle) const </arglist>
    </member>
    <member kind="function">
      <type>Text &amp;</type>
      <name>translate</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a0edc1646f60067bc12e6240dd8daef21</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>Text</type>
      <name>translated</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a63522569abec7ed8b30c567ae3aaa15a</anchor>
      <arglist>(double dx, double dy) const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>ad456ace747f07bd2b17165d31eec1021</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a4c9be8931b546526185cec4fdfe56a02</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>Text</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>ad690b5af4259837fd0dfcc57bca70764</anchor>
      <arglist>(double sx, double sy) const </arglist>
    </member>
    <member kind="function">
      <type>Text</type>
      <name>scaled</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>af53122c3f7cfba99de61d1b86a5d4184</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleAll</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>ac493da3a5b4b38a299d96c5b991f45b2</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPostscript</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a15704cd6696c31fb52530627eb3d75d7</anchor>
      <arglist>(std::ostream &amp;stream, const TransformEPS &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushFIG</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a8cc0e05a33e51d84da043347c40c6d56</anchor>
      <arglist>(std::ostream &amp;stream, const TransformFIG &amp;transform, std::map&lt; DGtal::Color, int &gt; &amp;colormap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushSVG</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>af8c61940ff17d42ec4f055d06d62d5db</anchor>
      <arglist>(std::ostream &amp;stream, const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushTikZ</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a11be02d2540b14ec82e4981bb9a71cbd</anchor>
      <arglist>(std::ostream &amp;stream, const TransformTikZ &amp;transform) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>boundingBox</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a417bdea4f31b57fb8030cf5c0dbc6eb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Text *</type>
      <name>clone</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a3a6b32774a97486a2e332c0f11bb6267</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a77df31479fbeb932929e3d51a1e2fdd6</anchor>
      <arglist>(DGtal::Color penColor, DGtal::Color fillColor, double lineWidth, LineStyle style, const LineCap cap, const LineJoin join, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acd26c97517138a3746580e361dda778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filled</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a8acebc199d18c75cdb3aa9f1a26dbb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a759a26a61ca5c8aed0d7b18a83d42d02</anchor>
      <arglist>(double angle, const Point &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>rotateDeg</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaf4c2df13fedd9d673ecd5fc07318c87</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>bbox</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>adaad15fb6db14caa6632601b46a22806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator--</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>aaed27afa5255d8777d251389695ed3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shape &amp;</type>
      <name>operator++</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>acbae2ae670a0a3c4f45f56acd70bf669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a018955fc5e9e12a84510d53bca3eeecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af55b6e8ba4edab84c3297742ad7f31a6</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shiftDepth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a31a333c9400fb74a3e5b4adc22b96fdf</anchor>
      <arglist>(int shift)</arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a847e3b4fc2e663fd73feee5970091230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DGtal::Color &amp;</type>
      <name>fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ab162316a28adedbec8454d70ff6cab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Point</type>
      <name>_position</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>abb3d150f39ce7e8f2d7eba1ec9d39b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_text</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a756f8a704c8e9e1bd12f6b357d85553a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Fonts::Font</type>
      <name>_font</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>aba1b85a6b03383f78999db7a66389887</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_svgFont</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a85c7127d3b75d808da55d263931e5321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_angle</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a55a1a0dc1e178798cc98d1eb84def75d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_size</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a202755b7e917d28e7801391dfe1088ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_xScale</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>ac35fba27d78ad00e32b26b77fa84026c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_yScale</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a11a781430c4f33a557e88ac091b7bd09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_depth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7e99bcf93188b960d66d85f3ce593919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_penColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4975fe66a99f0a2c416e383b2ffe4940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DGtal::Color</type>
      <name>_fillColor</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a2ca555188ee0440cf2cff7a83caafc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_lineWidth</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a6016e7d6627f095566afcb27a2ccaf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineStyle</type>
      <name>_lineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>abf0de9f25154ba899e556de5ee898655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineCap</type>
      <name>_lineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5d392196a12f5ffc5c865d6a15633964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineJoin</type>
      <name>_lineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a4ba2bda8c323ace130b580e2c856e8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>_name</name>
      <anchorfile>structLibBoard_1_1Text.html</anchorfile>
      <anchor>a424c7dd323ad5bd50762e3491b925ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ButtCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368aa26d3fdce6499d0eb8d8b677db3269f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368ad2b5f9290405771e387b70d62ae0c194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>af09a3c6f719c8a846447c0cd2e2d0368af51ba83a785ff46338b9798783b40ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ada55cbaa884d12a2bad755bbb5dfdc20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2abff2d9f2c1448ab19f2276a143700f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a5618d9c1f412d36189695c557f1b9be2ab1799500356c37246ac516de18f88b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LineStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ace5efd99787d086d59b6892c4c310cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2c6dfa93e107a48f23c1b1bb6c7f93ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a3781ca5a084a9e042cd1ae5ea0acee46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900ae95ac4da205529eac9726107d645232f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a7b71c52014120ab8ca00b30ba3e8dc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotDotStyle</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>ad9b9ccfae0a74f1d681cb126a225c900a2151647e67c1a9b081b4ec077b9d1cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>svgProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a0e7e0cfca67d9953afbf534091c5ea40</anchor>
      <arglist>(const TransformSVG &amp;transform) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>postscriptProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a7544f9a093c60457a42268a39064543a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>tikzProperties</name>
      <anchorfile>structLibBoard_1_1Shape.html</anchorfile>
      <anchor>a47117ccbb8c57a4569fa6b0b0246cc46</anchor>
      <arglist>(const TransformTikZ &amp;transform) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LibBoard::MessageStream</name>
    <filename>classLibBoard_1_1MessageStream.html</filename>
    <member kind="function">
      <type></type>
      <name>MessageStream</name>
      <anchorfile>classLibBoard_1_1MessageStream.html</anchorfile>
      <anchor>a7ebcea2c511ddd97a8df7de836eebf6e</anchor>
      <arglist>(std::ostream &amp;out, const char *prefix)</arglist>
    </member>
    <member kind="function">
      <type>MessageStream</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classLibBoard_1_1MessageStream.html</anchorfile>
      <anchor>afa69858c5789eaa47e2a0fc70c8b30c6</anchor>
      <arglist>(const T &amp;v)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::ostream &amp;</type>
      <name>_out</name>
      <anchorfile>classLibBoard_1_1MessageStream.html</anchorfile>
      <anchor>a2574f680c35f79f75fb771df95eb3f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const char *</type>
      <name>_prefix</name>
      <anchorfile>classLibBoard_1_1MessageStream.html</anchorfile>
      <anchor>a9f8bd450c1308b33df40b54896689914</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::Transform</name>
    <filename>structLibBoard_1_1Transform.html</filename>
    <member kind="function">
      <type></type>
      <name>Transform</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a08a3179fa8f71a84aea2fc03bc1ce802</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transform</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a8427ba884621f96a72f0736186ad6cb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>mapX</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a4b15f8db7a2f6735d808d78b250a7017</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>mapY</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a94b60d85428b643bb681e5b155fa38aa</anchor>
      <arglist>(double y) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a44e207951342c236a7e4f67ec7b4ddce</anchor>
      <arglist>(double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>ad04f9c87f167b8cdf1fac766d4749dbc</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>rounded</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a25fb4e8315ca826ccbd9fc1db07c99b0</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setBoundingBox</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a7a07f8912f113a36c2995b4553136564</anchor>
      <arglist>(const Rect &amp;rect, const double pageWidth, const double pageHeight, const double margin)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>round</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a7dca64e2a2bbd5240004ebc7d72df30a</anchor>
      <arglist>(const double &amp;x)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_scale</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>aa8b26f0b0b2c85cc2e872d91cc660783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_deltaX</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>adc21f3ec5acc9bc0c7f05b79324c6748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_deltaY</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a632a19a44c1b6126e7b4b0e5d650e5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_height</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a59112b6cb36a11fc52c9b27b5959d557</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::TransformEPS</name>
    <filename>structLibBoard_1_1TransformEPS.html</filename>
    <base>LibBoard::Transform</base>
    <member kind="function">
      <type>double</type>
      <name>mapY</name>
      <anchorfile>structLibBoard_1_1TransformEPS.html</anchorfile>
      <anchor>a1464f54937f907aa67cb05cc0573d8ed</anchor>
      <arglist>(double y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundingBox</name>
      <anchorfile>structLibBoard_1_1TransformEPS.html</anchorfile>
      <anchor>aa93abeb25bfee74b3f22559434632054</anchor>
      <arglist>(const Rect &amp;rect, const double pageWidth, const double pageHeight, const double margin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transform</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a08a3179fa8f71a84aea2fc03bc1ce802</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transform</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a8427ba884621f96a72f0736186ad6cb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>mapX</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a4b15f8db7a2f6735d808d78b250a7017</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a44e207951342c236a7e4f67ec7b4ddce</anchor>
      <arglist>(double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>ad04f9c87f167b8cdf1fac766d4749dbc</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>rounded</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a25fb4e8315ca826ccbd9fc1db07c99b0</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>round</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a7dca64e2a2bbd5240004ebc7d72df30a</anchor>
      <arglist>(const double &amp;x)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_scale</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>aa8b26f0b0b2c85cc2e872d91cc660783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_deltaX</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>adc21f3ec5acc9bc0c7f05b79324c6748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_deltaY</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a632a19a44c1b6126e7b4b0e5d650e5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_height</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a59112b6cb36a11fc52c9b27b5959d557</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::TransformFIG</name>
    <filename>structLibBoard_1_1TransformFIG.html</filename>
    <base>LibBoard::Transform</base>
    <member kind="function">
      <type></type>
      <name>TransformFIG</name>
      <anchorfile>structLibBoard_1_1TransformFIG.html</anchorfile>
      <anchor>a26740f125befd27b57526848c2da3188</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rounded</name>
      <anchorfile>structLibBoard_1_1TransformFIG.html</anchorfile>
      <anchor>adc70ab099667ef159112c1b636fb0283</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>mapY</name>
      <anchorfile>structLibBoard_1_1TransformFIG.html</anchorfile>
      <anchor>aa298aff33c7b9213f2cf5aa0eba650bf</anchor>
      <arglist>(double y) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mapWidth</name>
      <anchorfile>structLibBoard_1_1TransformFIG.html</anchorfile>
      <anchor>a9d2f05ce78c248bcf8cc8d423a19557c</anchor>
      <arglist>(double width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundingBox</name>
      <anchorfile>structLibBoard_1_1TransformFIG.html</anchorfile>
      <anchor>a1e707b015b55c49033ea76e9a774a756</anchor>
      <arglist>(const Rect &amp;rect, const double pageWidth, const double pageHeight, const double margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDepthRange</name>
      <anchorfile>structLibBoard_1_1TransformFIG.html</anchorfile>
      <anchor>aedefe7aafebe6c0e366a83662d1d1ff1</anchor>
      <arglist>(const ShapeList &amp;shapes)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mapDepth</name>
      <anchorfile>structLibBoard_1_1TransformFIG.html</anchorfile>
      <anchor>a1072c2b329bbc01ce016cc24614a37db</anchor>
      <arglist>(int depth) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transform</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a08a3179fa8f71a84aea2fc03bc1ce802</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transform</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a8427ba884621f96a72f0736186ad6cb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>mapX</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a4b15f8db7a2f6735d808d78b250a7017</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a44e207951342c236a7e4f67ec7b4ddce</anchor>
      <arglist>(double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>ad04f9c87f167b8cdf1fac766d4749dbc</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>_maxDepth</name>
      <anchorfile>structLibBoard_1_1TransformFIG.html</anchorfile>
      <anchor>a75a4393d6b3f43a97b7aa2973e5fbc9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>_minDepth</name>
      <anchorfile>structLibBoard_1_1TransformFIG.html</anchorfile>
      <anchor>a4b86a58f6554da84855a28709f49eebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>round</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a7dca64e2a2bbd5240004ebc7d72df30a</anchor>
      <arglist>(const double &amp;x)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_scale</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>aa8b26f0b0b2c85cc2e872d91cc660783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_deltaX</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>adc21f3ec5acc9bc0c7f05b79324c6748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_deltaY</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a632a19a44c1b6126e7b4b0e5d650e5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_height</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a59112b6cb36a11fc52c9b27b5959d557</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::TransformSVG</name>
    <filename>structLibBoard_1_1TransformSVG.html</filename>
    <base>LibBoard::Transform</base>
    <member kind="function">
      <type>double</type>
      <name>rounded</name>
      <anchorfile>structLibBoard_1_1TransformSVG.html</anchorfile>
      <anchor>a14d9540502b638c5fbbdf4b053e659db</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>mapY</name>
      <anchorfile>structLibBoard_1_1TransformSVG.html</anchorfile>
      <anchor>a90a017530a509f6eecf5a97535651f16</anchor>
      <arglist>(double y) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>mapWidth</name>
      <anchorfile>structLibBoard_1_1TransformSVG.html</anchorfile>
      <anchor>a2701962786803ad2f72701be36f36424</anchor>
      <arglist>(double width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundingBox</name>
      <anchorfile>structLibBoard_1_1TransformSVG.html</anchorfile>
      <anchor>acae6b5fe7faba74926001178282e3155</anchor>
      <arglist>(const Rect &amp;rect, const double pageWidth, const double pageHeight, const double margin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transform</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a08a3179fa8f71a84aea2fc03bc1ce802</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transform</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a8427ba884621f96a72f0736186ad6cb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>mapX</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a4b15f8db7a2f6735d808d78b250a7017</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a44e207951342c236a7e4f67ec7b4ddce</anchor>
      <arglist>(double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>ad04f9c87f167b8cdf1fac766d4749dbc</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>round</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a7dca64e2a2bbd5240004ebc7d72df30a</anchor>
      <arglist>(const double &amp;x)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_scale</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>aa8b26f0b0b2c85cc2e872d91cc660783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_deltaX</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>adc21f3ec5acc9bc0c7f05b79324c6748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_deltaY</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a632a19a44c1b6126e7b4b0e5d650e5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>_height</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a59112b6cb36a11fc52c9b27b5959d557</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LibBoard::TransformTikZ</name>
    <filename>structLibBoard_1_1TransformTikZ.html</filename>
    <base>LibBoard::TransformSVG</base>
    <member kind="function">
      <type>double</type>
      <name>rounded</name>
      <anchorfile>structLibBoard_1_1TransformSVG.html</anchorfile>
      <anchor>a14d9540502b638c5fbbdf4b053e659db</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>mapY</name>
      <anchorfile>structLibBoard_1_1TransformSVG.html</anchorfile>
      <anchor>a90a017530a509f6eecf5a97535651f16</anchor>
      <arglist>(double y) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>mapWidth</name>
      <anchorfile>structLibBoard_1_1TransformSVG.html</anchorfile>
      <anchor>a2701962786803ad2f72701be36f36424</anchor>
      <arglist>(double width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundingBox</name>
      <anchorfile>structLibBoard_1_1TransformSVG.html</anchorfile>
      <anchor>acae6b5fe7faba74926001178282e3155</anchor>
      <arglist>(const Rect &amp;rect, const double pageWidth, const double pageHeight, const double margin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transform</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a08a3179fa8f71a84aea2fc03bc1ce802</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transform</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a8427ba884621f96a72f0736186ad6cb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>mapX</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a4b15f8db7a2f6735d808d78b250a7017</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>a44e207951342c236a7e4f67ec7b4ddce</anchor>
      <arglist>(double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>scale</name>
      <anchorfile>structLibBoard_1_1Transform.html</anchorfile>
      <anchor>ad04f9c87f167b8cdf1fac766d4749dbc</anchor>
      <arglist>(double x) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>LibBoard::Fonts</name>
    <filename>namespaceLibBoard_1_1Fonts.html</filename>
    <member kind="enumeration">
      <name>Font</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimesRoman</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a7227b7b4fa78b16fb731db54846e1b26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimesItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a76b5f1151fceef8c7b8e4a5555ec94fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimesBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a5bdb16044950413eba1f7f71b778b291</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimesBoldItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a38df5016e4c601f879c0c01118e146b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AvantGardeBook</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3aa911b772f521481da7aa40cc1efa2076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AvantGardeBookOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3ae2a5eb3e995ad5926dc2a20a5f26113e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AvantGardeDemi</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3af029c17d1f6ec2445791ff30fcc24b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AvantGardeDemiOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a3ed537b29c4b710ec6939bb034e2f99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BookmanLight</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a6ff73a054a11fce1040b2253fa562f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BookmanLightItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3aea2627abf0106d73acf25e5570ffb2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BookmanDemi</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3ab1a79492e1901fb5314f426a9fe6b8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BookmanDemiItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3aa4c4efbcf79d03f94772f876fb595392</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Courier</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a6f143a3bfd5710c1953ca8fd6aff99dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CourierOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a29cb6ff6038d784ae8798084a30bfb9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CourierBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3afc5836f6edcb2052b30fa9aee43ff418</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CourierBoldOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a6deccba7755293bac2aa7cd78fb74bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Helvetica</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a297d33f587c8b5b5e7f326f9675592bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a6976891d33424baf62d364ba3c36394f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a97741f6bbc7406a16a2f451b775a90c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaBoldOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3ac73a7b700497f588eba0b2832962367d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaNarrow</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a4424f60f58811b1a02a6defddaf0108f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaNarrowOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3aed33367c067d894b80df17cf77c8f31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaNarrowBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3ae6910a04fecf7eb2acacd67f5cdca831</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HelveticaNarrowBoldOblique</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a928b45abd6c58949e109c4e4aebfb4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NewCenturySchoolbookRoman</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3ab8b927d406ca078899edcb469df9508c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NewCenturySchoolbookItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3af613f77894402c9904459a6e4216ea6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NewCenturySchoolbookBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a15a4ac0bcf525a8267badafabcdddbd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NewCenturySchoolbookBoldItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a4ec0fd60b55d9fed3e06ed475bc05bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PalatinoRoman</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a4721d8c6bbb43c0846946400600c7eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PalatinoItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a14533f71758a695062ddcb9f0e1f2ca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PalatinoBold</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a353169cffd1a6e5c5a02a04f3743d5e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PalatinoBoldItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3aef3cf05c45b7063931faeb001ba0d50a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Symbol</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a149a422620be1214441e8dd87298280f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZapfChanceryMediumItalic</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a7f58ed6b377ae7f535f2830b1eb1c325</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZapfDingbats</name>
      <anchorfile>namespaceLibBoard_1_1Fonts.html</anchorfile>
      <anchor>aa625464f813a8ce483957dd5cbdce3a3a9ae3ec0178abb9c0b4c6fe51876af210</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>/Users/kerautre/EnCours/DGtal/src/Board/</name>
    <path>/Users/kerautre/EnCours/DGtal/src/Board/</path>
    <filename>dir_a0e3b0b917879cdf9a8546ddcf87ece3.html</filename>
    <file>Board.cpp</file>
    <file>Board.h</file>
    <file>Path.cpp</file>
    <file>Path.h</file>
    <file>Point.h</file>
    <file>PSFonts.cpp</file>
    <file>PSFonts.h</file>
    <file>Rect.cpp</file>
    <file>Rect.h</file>
    <file>ShapeList.cpp</file>
    <file>ShapeList.h</file>
    <file>Shapes.cpp</file>
    <file>Shapes.h</file>
    <file>Tools.cpp</file>
    <file>Tools.h</file>
    <file>Transforms.cpp</file>
    <file>Transforms.h</file>
  </compound>
  <compound kind="dir">
    <name>/Users/kerautre/EnCours/DGtal/src/</name>
    <path>/Users/kerautre/EnCours/DGtal/src/</path>
    <filename>dir_68267d1309a1af8e8297ef4c3efbcdba.html</filename>
    <dir>/Users/kerautre/EnCours/DGtal/src/Board/</dir>
  </compound>
</tagfile>
